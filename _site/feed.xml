<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Code Museum</title>
        <description>Jay Tech personal blogging theme for Jekyll</description>
        <link>http://localhost:4000/</link>
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Tue, 20 Dec 2022 15:24:48 +0900</pubDate>
        <lastBuildDate>Tue, 20 Dec 2022 15:24:48 +0900</lastBuildDate>
        <generator>Jekyll v4.2.1</generator>
        
            <item>
                <title>MLOps Series [Part4]: MLflow</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mlflow.org/docs/latest/index.html&quot; target=&quot;_blank&quot;&gt;MLflow Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/mlops-series4</link>
                <guid isPermaLink="true">http://localhost:4000/mlops-series4</guid>
                
                <category>MLOps</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>MLOps Series [Part3]: Feast</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-feast&quot; id=&quot;markdown-toc-what-is-feast&quot;&gt;What is Feast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#언제-feature-store가-필요한가&quot; id=&quot;markdown-toc-언제-feature-store가-필요한가&quot;&gt;언제 Feature Store가 필요한가&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#feature-store의-핵심-구성-요소&quot; id=&quot;markdown-toc-feature-store의-핵심-구성-요소&quot;&gt;Feature Store의 핵심 구성 요소&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#why-feast&quot; id=&quot;markdown-toc-why-feast&quot;&gt;Why Feast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#feast-실습&quot; id=&quot;markdown-toc-feast-실습&quot;&gt;Feast 실습&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#initialization&quot; id=&quot;markdown-toc-initialization&quot;&gt;Initialization&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#data-ingestion&quot; id=&quot;markdown-toc-data-ingestion&quot;&gt;Data Ingestion&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#feature-definition&quot; id=&quot;markdown-toc-feature-definition&quot;&gt;Feature Definition&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#historical-features&quot; id=&quot;markdown-toc-historical-features&quot;&gt;Historical features&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#materialize&quot; id=&quot;markdown-toc-materialize&quot;&gt;Materialize&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#online-features&quot; id=&quot;markdown-toc-online-features&quot;&gt;Online Features&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;what-is-feast&quot;&gt;What is Feast&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/feast_3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To operate machine learning systems at scale, teams need to have access to a wealth of feature data to both train their models, as well as to serve them in production. GO-JEK and Google Cloud are pleased to announce the release of Feast, an open source feature store that allows teams to manage, store, and discover features for use in machine learning projects.&lt;/p&gt;

&lt;p&gt;Feast gives teams the ability to define and publish features to this unified store, which in turn facilitates discovery and feature reuse across machine learning projects.&lt;/p&gt;

&lt;p&gt;Feast &lt;strong&gt;standardize the definition, storage and access of features for training and serving.&lt;/strong&gt; It acts as a bridge between data engineering and machine learning.&lt;/p&gt;

&lt;h1 id=&quot;언제-feature-store가-필요한가&quot;&gt;언제 Feature Store가 필요한가&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;필요 없는 경우
    &lt;ul&gt;
      &lt;li&gt;All of our data points are independent, stateless, from client-side and there is no entity that has changing features over time&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;필요한 경우
    &lt;ul&gt;
      &lt;li&gt;when we need to have up-to-date features for an entity that we continually generate predictions for. For example, a user’s behavior (clicks, purchases, etc.) on an e-commerce platform or the deliveries a food runner recently made in the last hour, etc&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;feature-store의-핵심-구성-요소&quot;&gt;Feature Store의 핵심 구성 요소&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/feast.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;digest: 여러 데이터 소스에서 데이터를 읽어올 수 있어야함&lt;/li&gt;
  &lt;li&gt;definition: feature를 정의할 수 있어야함&lt;/li&gt;
  &lt;li&gt;offline: 모델 훈련을 위해 적절한 feature를 제공할 수 있어야함&lt;/li&gt;
  &lt;li&gt;online: 추론을 위해 낮은 지연률로 feature를 제공할 수 있어야함&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;pen-para&quot;&gt;
    &lt;div class=&quot;pen-bar&quot;&gt;
      &lt;i class=&quot;fas fa-pen&quot;&gt;&lt;/i&gt;Feature Store
    &lt;/div&gt;
    &lt;div class=&quot;pen-content&quot;&gt;
      &lt;li&gt;Feast, Hopsworks, Tecton, Rasgo, etc&lt;/li&gt;
      &lt;li&gt;AWS의 Sagemaker, GCP의 Vertex AI&lt;/li&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;h1 id=&quot;why-feast&quot;&gt;Why Feast&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Discoverability and reuse of features: A centralized feature store allows organizations to build up a foundation of features that can be reused across projects. Teams are then able to utilize features developed by other teams, and as more features are added to the store it becomes easier and cheaper to build models.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Access to features for training: Feast allows users to easily access historical feature data. This allows users to produce datasets of features for use in training models. ML practitioners can then focus more on modelling and less on feature engineering.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Access to features in serving: Feature data is also available to models in production through a feature serving API. The serving API has been designed to provide low latency access to the latest feature values.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consistency between training and serving: Feast provides consistency by managing and unifying the ingestion of data from batch and streaming sources, using Apache Beam, into both the feature warehouse and feature serving stores. Users can query features in the warehouse and the serving API using the same set of feature identifiers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Standardization of features: Teams are able to capture documentation, metadata and metrics about features. This allows teams to communicate clearly about features, test features data, and determine if a feature is useful for a particular model.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;fire-para&quot;&gt;
    &lt;div class=&quot;fire-bar&quot;&gt;&lt;i class=&quot;fas fa-question&quot;&gt;&lt;/i&gt; Is Feast a database?&lt;/div&gt;
    &lt;div class=&quot;fire-content&quot;&gt;No. Feast is a tool that manages data stored in other systems (e.g. BigQuery, Cloud Firestore, Redshift, DynamoDB). It is not a database, but it helps manage data stored in other systems.&lt;/div&gt;
&lt;/div&gt;

&lt;h1 id=&quot;feast-실습&quot;&gt;Feast 실습&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/feast_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;initialization&quot;&gt;Initialization&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;feast
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;feast init &lt;span class=&quot;nt&quot;&gt;--minimal&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--template&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;feast_project
&lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------------------&lt;/span&gt;
Creating a new Feast repository &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /Users/peter/feast_project.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p ~/feast_project/store

touch ~/feast_project/feature_repo/features.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;feast_project
├── feature_repo
│   └── feature_store.yaml &lt;span class=&quot;c&quot;&gt;# configuration&lt;/span&gt;
│   └── features.py &lt;span class=&quot;c&quot;&gt;# feature definitions&lt;/span&gt;
└── store
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We’re going to configure the locations for our registry and online store (SQLite) in our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feature_store.yaml&lt;/code&gt; file.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;registry: contains information about our feature repository, such as data sources, feature views, etc. Since it’s in a DB, instead of a Python file, it can very quickly be accessed in production.&lt;/li&gt;
  &lt;li&gt;online store: DB (SQLite for local) that stores the (latest) features for defined entities to be used for online inference.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If all our feature definitions look valid, Feast will sync the metadata about Feast objects to the registry. The registry is a tiny database storing most of the same information you have in the feature repository. This step is necessary because the production feature serving infrastructure won’t be able to access Python files in the feature repository at run time, but it will be able to efficiently and securely read the feature definitions from the registry.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# feature_store.yaml&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;feature_project&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;../store/registry.db&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;provider&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;local&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;online_store&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;../store/online_store.db&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;data-ingestion&quot;&gt;Data Ingestion&lt;/h2&gt;

&lt;p&gt;The first step is to establish connections with our data sources (databases, data warehouse, etc.). Feast requires it’s data sources to either come from a file (Parquet), data warehouse (BigQuery) or data stream (Kafka / Kinesis).&lt;/p&gt;

&lt;p&gt;여기서는 DataOps에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.parquet&lt;/code&gt; 파일의 형태로 feature를 제공한다고 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;feature-definition&quot;&gt;Feature Definition&lt;/h2&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# features.py
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;feast&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FeatureView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ValueType&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;feast.data_source&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileSource&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;google.protobuf.duration_pb2&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Read data
# (feature 데이터 읽어오기)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;START_TIME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2020-02-17&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;project_details&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FileSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATA_DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;features.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;event_timestamp_column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;created_on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Define an entity
# (데이터를 고유하게 식별할 수 있는 컬럼)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Entity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INT64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Define a Feature View for each project
# (읽어온 feature 데이터를 뷰로 만든다 =&amp;gt; 특정 컬럼, 특정 시간대)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project_details_view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FeatureView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project_details&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;entities&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strptime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;START_TIME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%Y-%m-%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ValueType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;online&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project_details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once we’ve defined our feature views, we can apply it to push a version controlled definition of our features to the registry for fast access. It will also configure our registry and online stores that we’ve defined in our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;feature_store.yaml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Feature View는 실제 데이터를 저장하는건 아니고, 어떤 메타 정보를 저장하고 있는 것이다. 실제 데이터는 로컬에 저장되어 있는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;features.parquet&lt;/code&gt;이다.&lt;/p&gt;

&lt;p&gt;실무에서는 이런 방법보다는 Bigquery와 같은 저장소에 저장되어 있는 데이터가 더 일반적이다.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;feast apply
&lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------&lt;/span&gt;
Registered entity &lt;span class=&quot;nb&quot;&gt;id
&lt;/span&gt;Registered feature view project_details
Deploying infrastructure &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;project_details
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;historical-features&quot;&gt;Historical features&lt;/h2&gt;

&lt;p&gt;이제 ML팀에서는 등록된 뷰를 이용해 모델을 훈련시킬 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# ex. train.py
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;feast&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FeatureStore&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# Identify entities
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project_ids&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;timestamps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;entity_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project_ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;event_timestamp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timestamps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;entity_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;------------------------&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;event_timestamp&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;------------------------&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Get historical features
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FeatureStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;training_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_historical_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;entity_df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entity_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;feature_refs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project_details:text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;project_details:tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;training_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;------------------------------------------------------------------------------------------------&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;event_timestamp&lt;/span&gt;	          &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;project_details__text&lt;/span&gt;	                           &lt;span class=&quot;n&quot;&gt;project_details__tag&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Comparison&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;YOLO&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RCNN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;real&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;world&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vision&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Infer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Contextual&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Inference&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;computer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vision&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;Awesome&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graph&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Classification&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;graph&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;learning&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;------------------------------------------------------------------------------------------------&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;materialize&quot;&gt;Materialize&lt;/h2&gt;

&lt;p&gt;For online inference, we want to retrieve features very quickly via our online store. However, the features are not in our online store just yet, so we’ll need to materialize them first.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;CURRENT_TIME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; +&lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%dT%H:%M:%S&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
feast materialize-incremental &lt;span class=&quot;nv&quot;&gt;$CURRENT_TIME&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;------------------------------------------------------------------------------------------------&lt;/span&gt;
Materializing 1 feature views to 2022-06-23 19:16:05+00:00 into the sqlite online store.
project_details from 2020-02-17 19:16:06+00:00 to 2022-06-23 19:16:05+00:00:
100%|██████████████████████████████████████████████████████████| 955/955 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;00:00&amp;lt;00:00, 10596.97it/s]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This has moved the features for all of our projects into the online store since this was first time materializing to the online store. When we subsequently run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;materialize-incremental&lt;/code&gt; command, Feast keeps track of previous materializations and so we’ll only materialize the new data since the last attempt.&lt;/p&gt;

&lt;p&gt;(처음 명령어를 실행하면, 전체 feature 데이터를 온라인 저장소로 모두 옮긴다. 이 후에는 명령어를 실행할 때마다 마지막 회수된 데이터 이 후의 데이터만 가져온다)&lt;/p&gt;

&lt;p&gt;(Note that they may not be the most recent feature values for that entity.)&lt;/p&gt;

&lt;h2 id=&quot;online-features&quot;&gt;Online Features&lt;/h2&gt;

&lt;p&gt;Once we’ve materialized the features (or directly sent to the online store in the stream scenario), we can use the online store to retrieve features.&lt;/p&gt;

&lt;p&gt;(위와 같이 오프라인 저장소에서 materialized된 데이터를 inference에 이용할 수도 있고, 스트림 프로세싱에서 읽어온 데이터를 inference에 이용할 수도 있다)&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Get online features
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FeatureStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;feature_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_online_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;feature_refs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project_details:text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;project_details:tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;entity_rows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;feature_vector&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;------------------------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'project_details__tag'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'computer-vision'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'project_details__text'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Comparison between YOLO and RCNN on real world videos Bringing theory to experiment is cool. We can easily train models in colab and find the results in minutes.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://feast.dev/&quot; target=&quot;_blank&quot;&gt;Feast.dev&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://feast.dev/blog/what-is-a-feature-store/&quot; target=&quot;_blank&quot;&gt;Feast, What is a Feature Store?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rtd.feast.dev/en/master/#&quot;&gt;Feast Python API Documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p2cuq4eJ2BY&amp;amp;list=LL&amp;amp;index=4&amp;amp;t=561s&quot; target=&quot;_blank&quot;&gt;Youtube Prodramp, An AI Engineer technical guide to Feature Store with FEAST&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.featurestorecomparison.com/&quot; target=&quot;_blank&quot;&gt;Compare, find and choose the best feature store&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hotorch.tistory.com/m/192&quot; target=&quot;_blank&quot;&gt;[패스트캠퍼스 챌린지 47일차] GCP - Feast Feature Store (1)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@hsh/Feature-Store-why&quot; target=&quot;_blank&quot;&gt;Feature Store - why?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zzsza.github.io/mlops/2020/02/02/feature-store/&quot; target=&quot;_blank&quot;&gt;zzsza, Machine Learning의 Feature Store란?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cloud.google.com/blog/products/ai-machine-learning/introducing-feast-an-open-source-feature-store-for-machine-learning?hl=en&quot; target=&quot;_blank&quot;&gt;Google cloud, Introducing Feast: an open source feature store for machine learning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://madewithml.com/courses/mlops/feature-store/&quot; target=&quot;_blank&quot;&gt;madewithml, Feature Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/mlops-series3</link>
                <guid isPermaLink="true">http://localhost:4000/mlops-series3</guid>
                
                <category>MLOps</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>MLOps Series [Part2]: dvc</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/&quot; target=&quot;_blank&quot;&gt;dvc.org&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://minimin2.tistory.com/185&quot; target=&quot;_blank&quot;&gt;minimin2, [MLOps] DVC(Data Version Control) 데이터 버전 관리 사용법&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/use-cases/versioning-data-and-models&quot; target=&quot;_blank&quot;&gt;dvc, Versioning Data and Models&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/use-cases/versioning-data-and-models/tutorial&quot; target=&quot;_blank&quot;&gt;dvc, Tutorial: Data and Model Versioning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/start/data-management/data-versioning&quot; target=&quot;_blank&quot;&gt;dvc, Get Started: Data Versioning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/start/data-management/data-and-model-access&quot; target=&quot;_blank&quot;&gt;dvc, Get Started: Data and Model Access&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/start/data-management/data-pipelines&quot; target=&quot;_blank&quot;&gt;dvc, Get Started: Data Pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dvc.org/doc/start/data-management/metrics-parameters-plots&quot; target=&quot;_blank&quot;&gt;dvc, Get Started: Metrics, Parameters, and Plots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/mlops-series2</link>
                <guid isPermaLink="true">http://localhost:4000/mlops-series2</guid>
                
                <category>MLOps</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>MLOps Series [Part1]: Intro</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#mlops&quot; id=&quot;markdown-toc-mlops&quot;&gt;MLOps&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#대표적인-기술-스택&quot; id=&quot;markdown-toc-대표적인-기술-스택&quot;&gt;대표적인 기술 스택&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/mlops_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;mlops&quot;&gt;MLOps&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;모델 중심이 아닌 데이터가 중심이 되는 AI 시대가 오고 있다&lt;/li&gt;
  &lt;li&gt;체계적인 데이터 관리가 중요하다&lt;/li&gt;
  &lt;li&gt;MLOps(ML + Operation))
    &lt;ul&gt;
      &lt;li&gt;머신러닝 운영에 필요한 일을 일컫는 말&lt;/li&gt;
      &lt;li&gt;Feature extraction - Model Train - Versioning - Serving - Monitoring&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;(참고, Feature engineering = Feature extraction + Feature store)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;대표적인-기술-스택&quot;&gt;대표적인 기술 스택&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;ML 파이프라인: scikit-learn, pyspark&lt;/li&gt;
  &lt;li&gt;피처 저장소: Feast&lt;/li&gt;
  &lt;li&gt;데이터 버저닝: dvc&lt;/li&gt;
  &lt;li&gt;모델 버저닝: MLflow&lt;/li&gt;
  &lt;li&gt;서빙: FastAPI, django&lt;/li&gt;
  &lt;li&gt;모니터링: Grafana&lt;/li&gt;
  &lt;li&gt;자동화: kubeflow&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.tecton.ai/blog/devops-ml-data/?__hstc=145182251.a6226b731366ba276c4a4a107187f8d0.1669033771134.1669033771134.1669033771134.1&amp;amp;__hssc=145182251.5.1669033771134&amp;amp;__hsfp=4038990400&quot; target=&quot;_blank&quot;&gt;tecton, Why We Need DevOps for ML Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://coffeewhale.com/what-is-mlops&quot; target=&quot;_blank&quot;&gt;커피고래가 생각하는 MLOps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/mlops-series1</link>
                <guid isPermaLink="true">http://localhost:4000/mlops-series1</guid>
                
                <category>MLOps</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Data Engineering Series [Part30]: 크롤링</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/data-engineering-series30</link>
                <guid isPermaLink="true">http://localhost:4000/data-engineering-series30</guid>
                
                <category>DE</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Data Engineering Series [Part29]: KPI (Key Performance Indicator) 데이터</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://asana.com/ko/resources/key-performance-indicator-kpi&quot; target=&quot;_blank&quot;&gt;asana, 핵심 성과 지표(KPI)란?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.datapine.com/kpi-examples-and-templates/&quot; target=&quot;_blank&quot;&gt;datapine, KPI Examples &amp;amp; Templates&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://datahub.io/datahq/datahub-kpis#pandas&quot; target=&quot;_blank&quot;&gt;datahub, DataHub KPIs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.masocampus.com/article-data-analysis-kpi/&quot; target=&quot;_blank&quot;&gt;[마소캠퍼스] 데이터 분석을 위해 서비스 성과를 수치화로 표현 가능한 주요 지표(KPI) 정리&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/data-engineering-series29</link>
                <guid isPermaLink="true">http://localhost:4000/data-engineering-series29</guid>
                
                <category>DE</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Data Engineering Series [Part28]: 데이터 파이프라인과 장애</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#데이터-파이프라인-구축을-위한-개략도&quot; id=&quot;markdown-toc-데이터-파이프라인-구축을-위한-개략도&quot;&gt;데이터 파이프라인 구축을 위한 개략도&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#데이터-파이프라인의-안정성을-높이려면&quot; id=&quot;markdown-toc-데이터-파이프라인의-안정성을-높이려면&quot;&gt;데이터 파이프라인의 안정성을 높이려면&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#필요한-것&quot; id=&quot;markdown-toc-필요한-것&quot;&gt;필요한 것&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#모니터링&quot; id=&quot;markdown-toc-모니터링&quot;&gt;모니터링&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#감지--알람&quot; id=&quot;markdown-toc-감지--알람&quot;&gt;감지 + 알람&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cicd&quot; id=&quot;markdown-toc-cicd&quot;&gt;CI/CD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#유효성-검사&quot; id=&quot;markdown-toc-유효성-검사&quot;&gt;유효성 검사&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#자동화&quot; id=&quot;markdown-toc-자동화&quot;&gt;자동화&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#그럼에도-장애가-발생했다면&quot; id=&quot;markdown-toc-그럼에도-장애가-발생했다면&quot;&gt;그럼에도 장애가 발생했다면&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;데이터-파이프라인-구축을-위한-개략도&quot;&gt;데이터 파이프라인 구축을 위한 개략도&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/images/all_for_data_engineer.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;데이터-파이프라인의-안정성을-높이려면&quot;&gt;데이터 파이프라인의 안정성을 높이려면&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;모니터링할 수 있어야 한다(에러 로그 + 컴퓨팅 자원 시각화한 대시보드)&lt;/li&gt;
  &lt;li&gt;장애를 감지할 수 있어야 한다 + 알람 기능&lt;/li&gt;
  &lt;li&gt;CI/CD하는 과정에서 테스트 하는 과정이 수반되어야 한다&lt;/li&gt;
  &lt;li&gt;각 컴포넌트 + 유저단에서 데이터 유효성 검사가 필요하다 (데이터 타입, 제약사항 준수여부, 데이터 품질)&lt;/li&gt;
  &lt;li&gt;장애 복구가 가능해야 한다&lt;/li&gt;
  &lt;li&gt;위의 과정들이 구조화/자동화 되어야 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;필요한-것&quot;&gt;필요한 것&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Prometheus, Grafana&lt;/li&gt;
  &lt;li&gt;Pytest&lt;/li&gt;
  &lt;li&gt;Airflow&lt;/li&gt;
  &lt;li&gt;Jenkins&lt;/li&gt;
  &lt;li&gt;Slack&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;모니터링&quot;&gt;모니터링&lt;/h1&gt;

&lt;h1 id=&quot;감지--알람&quot;&gt;감지 + 알람&lt;/h1&gt;

&lt;h1 id=&quot;cicd&quot;&gt;CI/CD&lt;/h1&gt;

&lt;h1 id=&quot;유효성-검사&quot;&gt;유효성 검사&lt;/h1&gt;

&lt;h1 id=&quot;자동화&quot;&gt;자동화&lt;/h1&gt;

&lt;h1 id=&quot;그럼에도-장애가-발생했다면&quot;&gt;그럼에도 장애가 발생했다면&lt;/h1&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.bmc.com/blogs/resilient-data-pipelines/&quot; target=&quot;_blank&quot;&gt;bmc blogs, 3 Keys to Building Resilient Data Pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=7GI6LHZsUX0&quot; target=&quot;_blank&quot;&gt;Youtube, Testing data pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.startdataengineering.com/post/how-to-add-tests-to-your-data-pipeline/&quot; target=&quot;_blank&quot;&gt;How to add tests to your data pipelines&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@moey920/%EC%95%88%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%9A%B4%EC%98%81%EC%9D%84-%EC%99%84%EC%84%B1%ED%95%98%EB%8A%94-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81.-%ED%94%84%EB%A1%9C%EB%A9%94%ED%85%8C%EC%9A%B0%EC%8A%A4%EC%99%80-%EA%B7%B8%EB%9D%BC%ED%8C%8C%EB%82%98&quot; target=&quot;_blank&quot;&gt;moey920.log, 안정적인 운영을 완성하는 모니터링, 프로메테우스와 그라파나&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/data-engineering-series28</link>
                <guid isPermaLink="true">http://localhost:4000/data-engineering-series28</guid>
                
                <category>DE</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Data Engineering Series [Part26]: Google Bigquery</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#bigquery&quot; id=&quot;markdown-toc-bigquery&quot;&gt;Bigquery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#가격-정책&quot; id=&quot;markdown-toc-가격-정책&quot;&gt;가격 정책&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#테이블-세트&quot; id=&quot;markdown-toc-테이블-세트&quot;&gt;테이블 세트&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#테이블&quot; id=&quot;markdown-toc-테이블&quot;&gt;테이블&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#validator&quot; id=&quot;markdown-toc-validator&quot;&gt;Validator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;bigquery&quot;&gt;Bigquery&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;데이터 웨어하우스 (Google Bigquery, AWS Redshift, Snowflake 등)&lt;/li&gt;
  &lt;li&gt;GCP가 자동으로 관리&lt;/li&gt;
  &lt;li&gt;분산형 분석 엔진 (테라바이트급 쿼리를 초단위로 실행)&lt;/li&gt;
  &lt;li&gt;분석에 필요한 기능들 제공(머신러닝, BI 등)&lt;/li&gt;
  &lt;li&gt;CLI 또는 Python, Java와 같은 언어에서 API로도 사용 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;가격-정책&quot;&gt;가격 정책&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;분석(SELECT 비용)
    &lt;ul&gt;
      &lt;li&gt;쿼리를 처리할 때 발생하는 비용 (쿼리, 스크립트, DDL, DML 등)&lt;/li&gt;
      &lt;li&gt;5$/조회 용량 TB&lt;/li&gt;
      &lt;li&gt;매월 1TB는 무료&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;수집(INSERT 비용)
    &lt;ul&gt;
      &lt;li&gt;데이터를 입력하는데 드는 비용&lt;/li&gt;
      &lt;li&gt;일괄 로드: 무료&lt;/li&gt;
      &lt;li&gt;스트리밍 로드: 0.01$/200MB&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;추출(READ)
    &lt;ul&gt;
      &lt;li&gt;일괄 내보내기: 무료&lt;/li&gt;
      &lt;li&gt;스트리밍 내보내기: 1.1$/1TB&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;저장(스토리지 비용)
    &lt;ul&gt;
      &lt;li&gt;활성 스토리지: 0.02$/1GB&lt;/li&gt;
      &lt;li&gt;장기 스토리지: 0.01$/1GB&lt;/li&gt;
      &lt;li&gt;매월 10GB는 무료&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;테이블-세트&quot;&gt;테이블 세트&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;테이블을 저장하고 있는 폴더&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;테이블&quot;&gt;테이블&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;다른 DB의 테이블과 같은 개념&lt;/li&gt;
  &lt;li&gt;Bigquery에 저장한 테이블 뿐만 아니라,&lt;/li&gt;
  &lt;li&gt;구글 클라우드 스토리지나 스프레드 시트와 같은 외부에 저장된 데이터도 바로 접근해서 사용 가능&lt;/li&gt;
  &lt;li&gt;용도에 맞게 샤딩, 파티셔닝, 클러스터링 할 수 있음&lt;/li&gt;
  &lt;li&gt;(샤딩: 하나의 테이블을 물리적으로 여러 서버에 분산 저장)&lt;/li&gt;
  &lt;li&gt;(파티셔닝: 하나의 테이블을 논리적으로 특정 컬럼 값을 기준으로 여러 개의 파티션으로 분할해서 저장)&lt;/li&gt;
  &lt;li&gt;(클러스터링: 하나의 테이블을 여러 컬럼 값을 기준으로 정렬해서 여러 서버에 분산 저장)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;validator&quot;&gt;Validator&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;내가 입력한 쿼리의 유효성, 예상 비용을 알 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=MILy4dzSGk4&amp;amp;list=PLghTMrY7fIM5fupKwEHQxw9ihqQAXeo3-&quot; target=&quot;_blank&quot;&gt;T academy 유튜브, Google Bigquery &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://minwoooo.notion.site/BigQuery-2a4012d6cb2a466fa71c0345da7898d4#8b6c70978dbc4b81b97affa3afe9844d&quot; target=&quot;_blank&quot;&gt;minwoooo 노션, BigQuery 시작하기&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/data-engineering-series26</link>
                <guid isPermaLink="true">http://localhost:4000/data-engineering-series26</guid>
                
                <category>DE</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Data Engineering Series [Part25]: dbt</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@hsh/DBT-Data-Build-Tool&quot; target=&quot;_blank&quot;&gt;ㅎㅅㅎ, DBT: Data Build Tool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.visiodeibc.dev/%EC%9A%B0%EB%A6%AC-%ED%9A%8C%EC%82%AC%EB%8A%94-dbt-data-build-tool-%EB%A5%BC-%EC%8D%A8%EC%95%BC-%ED%95%A0%EA%B9%8C-5893ec7fbd85&quot; target=&quot;_blank&quot;&gt;Jake Lee, 우리 회사는 dbt(data build tool) 를 써야 할까&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tommybebe.github.io/2021/07/09/dbt-101/&quot; target=&quot;_blank&quot;&gt;Minwoo, DBT (Data Build Tool) - 101&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tech.socarcorp.kr/data/2022/07/25/analytics-engineering-with-dbt.html&quot; target=&quot;_blank&quot;&gt;SOCAR, 데이터에 신뢰성과 재사용성까지, Analytics Engineering with dbt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Tue, 06 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/data-engineering-series25</link>
                <guid isPermaLink="true">http://localhost:4000/data-engineering-series25</guid>
                
                <category>DE</category>
                
                
                <category>data_engineering</category>
                
            </item>
        
            <item>
                <title>Tech Interview Series [Part9]: Data Engineering(2)</title>
                <description>&lt;hr /&gt;

&lt;p id=&quot;toc&quot;&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#참고&quot; id=&quot;markdown-toc-참고&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;PostgreSQL의 장점은 무엇일까요?&lt;/li&gt;
  &lt;li&gt;인덱스는 크게 Hash 인덱스와 B+Tree 인덱스가 있습니다. 이것은 무엇일까요?&lt;/li&gt;
  &lt;li&gt;인덱스 Scan 방식은 무엇이 있나요?&lt;/li&gt;
  &lt;li&gt;인덱스 설계시 NULL값은 고려되야 할까요?&lt;/li&gt;
  &lt;li&gt;Nested Loop 조인은 무엇일까요?&lt;/li&gt;
  &lt;li&gt;Windows 함수는 무엇이고 어떻게 작성할까요?&lt;/li&gt;
  &lt;li&gt;MySQL에서 대량의 데이터(500만개 이상)를 Insert해야하는 경우엔 어떻게 해야할까요?&lt;/li&gt;
  &lt;li&gt;RDB의 char와 varchar의 차이는 무엇일까요?&lt;/li&gt;
  &lt;li&gt;구글의 BigQuery, AWS의 Redshift는 기존 RDB와 무슨 차이가 있을까요? 왜 빠를까요?&lt;/li&gt;
  &lt;li&gt;쿼리의 성능을 확인하기 위해 어떤 쿼리문을 작성해야 할까요?&lt;/li&gt;
  &lt;li&gt;MySQL이 요새 느리다는 신고가 들어왔습니다. 첫번째로 무엇을 확인하시고 조정하시겠나요?&lt;/li&gt;
  &lt;li&gt;동작하는 MySQL에 Alter table을 하면 안되는 이유를 설명해주세요. 그리고 대안을 설명해주세요&lt;/li&gt;
  &lt;li&gt;빡세게 동작하고 있는 MySQL을 백업뜨기 위해서는 어떤 방법이 필요할까요?&lt;/li&gt;
  &lt;li&gt;Apache Beam에 대해 아시나요? 기존 하둡과 어떤 차이가 있을까요?&lt;/li&gt;
  &lt;li&gt;좋게 만들어진 MapReduce는 어떤 프로그램일까요? 데이터의 Size 변화의 관점에서 설명할 수 있을까요?&lt;/li&gt;
  &lt;li&gt;여러 MR작업의 연쇄로 최종결과물이 나올때, 중간에 작업이 Fail날수 있습니다. 작업의 Fail은 어떻게 모니터링 하시겠습니까? 작업들간의 dependency는 어떻게 해결하시겠습니까?&lt;/li&gt;
  &lt;li&gt;분산환경의 JOIN은, 보통 디스크, CPU, 네트워크 중 어디에서 병목이 발생할까요? 이를 해결하기 위해 무엇을 해야 할까요?&lt;/li&gt;
  &lt;li&gt;암달의 법칙에 대해 말해봅시다. 그러므로 왜 shared-nothing 구조로 만들어야 하는지 설명해봅시다.&lt;/li&gt;
  &lt;li&gt;shared-nothing 구조의 단점도 있습니다. 어떤 것이 해당할까요?&lt;/li&gt;
  &lt;li&gt;Spark이 Hadoop보다 빠른 이유를 I/O 최적화 관점에서 생각해봅시다.&lt;/li&gt;
  &lt;li&gt;카산드라는 망한것 같습니다. 왜 망한것 같나요? 그래도 활용처가 있다면 어디인것 같나요.&lt;/li&gt;
  &lt;li&gt;TB 단위 이상의 기존 데이터와 시간당 GB단위의 신생 로그가 들어오는 서비스에서 모든 가입자에게 개별적으로 계산된 실시간 서비스(웹)를 제공하기 위한 시스템 구조를 구상해봅시다.&lt;/li&gt;
  &lt;li&gt;대용량 자료를 빠르게 lookup해야 하는 일이 있습니다. (100GB 이상, 100ms언더로 특정자료 찾기). 어떤 백엔드를 사용하시겠나요? 느린 백엔드를 사용한다면 이를 보완할 방법은 뭐가 있을까요?&lt;/li&gt;
  &lt;li&gt;데이터를 여러 머신으로 부터 모으기 위해 여러 선택지가 있을 수 있습니다. (flume, fluentd등) 아예 소스로부터 kafka등의 메시징 시스템을 바로 쓸 수도 있습니다. 어떤 것을 선호하시나요? 왜죠?&lt;/li&gt;
  &lt;li&gt;K8s가 무엇인가요?&lt;/li&gt;
  &lt;li&gt;CD/CD가 무엇인가요? &amp;gt; 사용한 경험 같이 설명(Jenkins)&lt;/li&gt;
  &lt;li&gt;NAT(Bridge)가 무엇인가?&lt;/li&gt;
  &lt;li&gt;AWS 중에 어떤 것을 사용해보았는가?&lt;/li&gt;
  &lt;li&gt;GIT을 써보았는가? &amp;gt; 사용한 경험 같이 설명&lt;/li&gt;
  &lt;li&gt;wh가 무엇인가요?&lt;/li&gt;
  &lt;li&gt;rdb가 무엇인가요?&lt;/li&gt;
  &lt;li&gt;rdb와 wh 차이점에 대해 설명해보세요&lt;/li&gt;
  &lt;li&gt;ETL, ELT의 차이에 대해 설명하고, 각각의 장점에 대해 설명해보세요&lt;/li&gt;
  &lt;li&gt;모니터링 서비스 사용경험? &amp;gt; 프로메테우스 그라파나에서 컴퓨터 문제가 생겼다고 하면 후처리를 어떻게 할 것인지&lt;/li&gt;
  &lt;li&gt;KAFKA 설명 &amp;gt; KAFKA 로드밸런싱을 한 이유, 내,외부 네트워크를 나눈 이유&lt;/li&gt;
  &lt;li&gt;사용한 저장소 설명(ES, HDFS, S3) &amp;gt; 여러개를 사용한 이유&lt;/li&gt;
  &lt;li&gt;ELK(EFK) Stack을 사용한 이유&lt;/li&gt;
  &lt;li&gt;DDP 설명&lt;/li&gt;
  &lt;li&gt;왜 ELK를 사용했는가?&lt;/li&gt;
  &lt;li&gt;자신이 ETL 만든 것중 가장 잘 만든 것은?&lt;/li&gt;
  &lt;li&gt;BigData가 무엇인가?&lt;/li&gt;
  &lt;li&gt;RDMBS 뭐 사용해봤는지&lt;/li&gt;
  &lt;li&gt;RDMBS의 장점은(정형 데이터 vs 비정형 데이터)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/Team-Neighborhood/I-want-to-study-Data-Science/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4&quot; target=&quot;_blank&quot;&gt;Team-Neighborhood/I-want-to-study-Data-Science데이터 엔지니어&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://zzsza.github.io/data/2018/02/17/datascience-interivew-questions/#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&quot; target=&quot;_blank&quot;&gt;zzsza, 데이터 사이언스 인터뷰 질문 모음집&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/OBenner/data-engineering-interview-questions&quot; target=&quot;_blank&quot;&gt;OBenner/data-engineering-interview-questions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@spamdong/%EB%A9%B4%EC%A0%91-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B8&quot; target=&quot;_blank&quot;&gt;spamdong, [면접] 데이터 엔지니어 면접 질문&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://velog.io/@spamdong/%EB%A9%B4%EC%A0%91-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%97%94%EC%A7%80%EB%8B%88%EC%96%B4-%EB%A9%B4%EC%A0%91-%EC%A7%88%EB%AC%B82&quot; target=&quot;_blank&quot;&gt;spamdong, [면접] 데이터 엔지니어 면접 질문2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://m.blog.naver.com/sunny_86_/221503974389&quot; target=&quot;_blank&quot;&gt;[인터뷰] 하둡 관련 면접 질문 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shelling203.tistory.com/33?category=304167&quot; target=&quot;_blank&quot;&gt;shelling203, Spark 기술 면접 질문&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <pubDate>Thu, 01 Sep 2022 21:01:35 +0900</pubDate>
                <link>http://localhost:4000/tech_interview_series9</link>
                <guid isPermaLink="true">http://localhost:4000/tech_interview_series9</guid>
                
                <category>tech_interview</category>
                
                
                <category>computer_science</category>
                
            </item>
        
    </channel>
</rss>
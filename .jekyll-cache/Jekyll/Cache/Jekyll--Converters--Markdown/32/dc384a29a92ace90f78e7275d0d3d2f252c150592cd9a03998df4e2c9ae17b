I"w'<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#로컬환경" id="markdown-toc-로컬환경">로컬환경</a>    <ul>
      <li><a href="#미니큐브minikube" id="markdown-toc-미니큐브minikube">미니큐브(minikube)</a></li>
      <li><a href="#docker-desktop" id="markdown-toc-docker-desktop">Docker Desktop</a></li>
      <li><a href="#kindkubernetes-in-docker" id="markdown-toc-kindkubernetes-in-docker">kind(Kubernetes in Docker)</a></li>
    </ul>
  </li>
  <li><a href="#클라우드환경" id="markdown-toc-클라우드환경">클라우드환경</a>    <ul>
      <li><a href="#gkegoogle-kubernetes-engine" id="markdown-toc-gkegoogle-kubernetes-engine">GKE(Google Kubernetes Engine)</a></li>
      <li><a href="#ekselastic-kubernetes-service" id="markdown-toc-ekselastic-kubernetes-service">EKS(Elastic Kubernetes Service)</a></li>
    </ul>
  </li>
</ul>

<hr />
<h1 id="로컬환경">로컬환경</h1>

<h2 id="미니큐브minikube">미니큐브(minikube)</h2>
<p>미니큐브는 물리 머신에 로컬 쿠버네티스를 쉽게 구축하고 실행할 수 있는 도구입니다. 실행되는 쿠버네티스는 <code class="language-plaintext highlighter-rouge">단일 노드 구성</code>이기 때문에 여러 대의 구성이 필요한 쿠버네티스 기능은 사용할 수 없습니다. 또한 미니큐브는 로컬 가상 머신 위에 쿠버네티스를 설치하기 때문에 <code class="language-plaintext highlighter-rouge">하이퍼바이저(Docer, Hyperkit, VirtualBox 등)</code>가 필요합니다. 제가 현재 사용하고 있는 맥 환경에서는 기본적으로 하이퍼킷이 설치되어 있습니다. 하지만 m1칩의 경우에는 아직 하이퍼킷을 지원하지 않기 때문에 먼저 도커를 설치, 실행한 후 미니큐브를 실행하셔야 합니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>minikube

minikube version
<span class="c"># minikube version: v1.25.1</span>

minikube start <span class="nt">--driver</span><span class="o">=</span>docker <span class="c"># --kubernetes-version 옵션으로 버전 선택 가능</span>
<span class="nt">--------------------------------------------------------------------------------</span>
😄  Darwin 12.1 <span class="o">(</span>arm64<span class="o">)</span> 의 minikube v1.25.1
✨  유저 환경 설정 정보에 기반하여 docker 드라이버를 사용하는 중
👍  minikube 클러스터의 minikube 컨트롤 플레인 노드를 시작하는 중
🚜  베이스 이미지를 다운받는 중 ...
💾  쿠버네티스 v1.23.1 을 다운로드 중 ...
    <span class="o">&gt;</span> preloaded-images-k8s-v16-v1...: 417.88 MiB / 417.88 MiB  100.00% 9.58 MiB
    <span class="o">&gt;</span> gcr.io/k8s-minikube/kicbase: 343.02 MiB / 343.02 MiB  100.00% 3.90 MiB p/
🔥  Creating docker container <span class="o">(</span><span class="nv">CPUs</span><span class="o">=</span>2, <span class="nv">Memory</span><span class="o">=</span>7903MB<span class="o">)</span> ...
🐳  쿠버네티스 v1.23.1 을 Docker 20.10.12 런타임으로 설치하는 중
    ▪ kubelet.housekeeping-interval<span class="o">=</span>5m
    ▪ 인증서 및 키를 생성하는 중 ...
    ▪ 컨트롤 플레인이 부팅...
    ▪ RBAC 규칙을 구성하는 중 ...
🔎  Kubernetes 구성 요소를 확인...
    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
🌟  애드온 활성화 : storage-provisioner, default-storageclass
🏄  끝났습니다! kubectl이 <span class="s2">"minikube"</span> 클러스터와 <span class="s2">"default"</span> 네임스페이스를 기본적으로 사용하도록 구성되었습니다.
</code></pre></div></div>

<p><img src="../images/../../images/kube_23.png" alt="" /></p>

<p>이제 도커로 띄운 가상머신 위에서 쿠버네티스가 돌아가고 있습니다. 한 번 확인해보겠습니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>minikube status
<span class="nt">--------------------</span>
minikube
<span class="nb">type</span>: Control Plane
host: Running
kubelet: Running
apiserver: Running
kubeconfig: Configured

minikube ip
<span class="c"># 192.168.49.2</span>
</code></pre></div></div>

<p>정지하고 삭제하는 명령어도 간단합니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>minikube stop

minikube delete
</code></pre></div></div>

<h2 id="docker-desktop">Docker Desktop</h2>
<p>Docker Desktop은 도커를 맥/윈도우에서 사용하기 위한 목적으로 만들어졌습니다. 그리고 Docker Desktop 버전 18.06.0부터는 쿠버네티스도 사용할 수 있도록 지원하고 있습니다. 사용 방법은 간단합니다. Docker Desktop을 설치, 실행한 뒤 Enable Kubernetes 목록을 클릭해줍니다.</p>

<p><img src="../images/../../images/kube_24.png" alt="" /></p>

<h2 id="kindkubernetes-in-docker">kind(Kubernetes in Docker)</h2>
<p>minikube와 Docker Desktop은 단일 노드로 구성된 쿠버네티스였다면, kind는 도커 컨테이너를 여러 개 띄워서 컨테이너 각각을 노드로 사용함으로써 <code class="language-plaintext highlighter-rouge">멀티 노드 클러스터</code>를 구축할 수 있습니다.<br />
<a href="https://kind.sigs.k8s.io" target="_blank">(kind 공식문서 참고)</a></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>kind

kind version
<span class="nt">--------------------</span>
kind v0.11.1 go1.17.2 darwin/arm64
</code></pre></div></div>

<p>잘 설치가 되었습니다. 이제 kind를 이용해 쿠버네티스에서 마스터와 워커 노드 역할을 하는 노드를 각각 3개씩 띄워 다음과 같이 멀티 노드 클러스터를 구축해보겠습니다.</p>

<p>(실행 결과 리소스 부족으로 kindcluster-worker2를 만들다가 오류가)</p>

<p><img src="/images/kube_9.png" alt="" /></p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># kind로 클러스터 구축을 위한 kind.yaml</span>
apiVersion: kind.x-k8s.io/v1alpha4
kind: Cluster
nodes:
- role: control-plane
  image: kindest/node:v1.23.1
- role: control-plane
  image: kindest/node:v1.23.1
- role: control-plane
  image: kindest/node:v1.23.1
- role: worker
  image: kindest/node:v1.23.1
- role: worker
  image: kindest/node:v1.23.1
- role: worker
  image: kindest/node:v1.23.1
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kind create cluster <span class="nt">--config</span> kind.yaml <span class="nt">--name</span> kindcluster
<span class="nt">----------------------------------------------------------------------</span>
Creating cluster <span class="s2">"kindcluster"</span> ...
 ✓ Ensuring node image <span class="o">(</span>kindest/node:v1.23.1<span class="o">)</span> 🖼
 ✓ Preparing nodes 📦 📦 📦 📦 📦 📦
 ✓ Configuring the external load balancer ⚖️
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
 ✗ Joining worker nodes 🚜 
</code></pre></div></div>

<p>실행 결과 리소스 부족으로 kindcluster-worker2를 만들다가 오류가 발생하여 마스터의 서버는 1개, 워커는 2개로 다시 구성해 실행해 보았습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apiVersion: kind.x-k8s.io/v1alpha4
kind: Cluster
nodes:
- role: control-plane
  image: kindest/node:v1.23.1
- role: worker
  image: kindest/node:v1.23.1
- role: worker
  image: kindest/node:v1.23.1
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kind create cluster <span class="nt">--config</span> kind.yaml <span class="nt">--name</span> kindcluster
<span class="nt">----------------------------------------------------------------------</span>
Creating cluster <span class="s2">"kindcluster"</span> ...
 ✓ Ensuring node image <span class="o">(</span>kindest/node:v1.23.1<span class="o">)</span> 🖼
 ✓ Preparing nodes 📦 📦 📦
 ✓ Writing configuration 📜
 ✓ Starting control-plane 🕹️
 ✓ Installing CNI 🔌
 ✓ Installing StorageClass 💾
 ✓ Joining worker nodes 🚜
Set kubectl context to <span class="s2">"kind-kindcluster"</span>
You can now use your cluster with:

kubectl cluster-info <span class="nt">--context</span> kind-kindcluster

Have a <span class="nb">nice </span>day! 👋
</code></pre></div></div>
<p>클러스터가 성공적으로 구축되었습니다.<br />
쿠버네티스에서 실행중인 노드를 확인해보겠습니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get nodes
----------------------------------------------------------------------------
NAME                        STATUS   ROLES                  AGE   VERSION
kindcluster-control-plane   Ready    control-plane,master   58s   v1.23.1
kindcluster-worker          Ready    &lt;none&gt;                 25s   v1.23.1
kindcluster-worker2         Ready    &lt;none&gt;                 25s   v1.23.1
</code></pre></div></div>

<p>클러스터는 다음 명령어로 삭제하시면 됩니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kind delete cluster <span class="nt">--name</span> kindcluster
<span class="nt">------------------------------------------</span>
Deleting cluster <span class="s2">"kindcluster"</span> ...
</code></pre></div></div>

<h1 id="클라우드환경">클라우드환경</h1>

<h2 id="gkegoogle-kubernetes-engine">GKE(Google Kubernetes Engine)</h2>

<h2 id="ekselastic-kubernetes-service">EKS(Elastic Kubernetes Service)</h2>
:ET
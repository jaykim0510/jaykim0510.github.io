I"2<hr />

<p id="toc"><strong>Table of Contents</strong></p>

<ul>
  <li>TOC</li>
</ul>

<hr />

<ul>
  <li>컨테이너에 대한 설정파일</li>
  <li>패스워드와 같은 기밀 정보</li>
  <li>환경 변수</li>
</ul>

<h1 id="기본-방법">기본 방법</h1>

<ul>
  <li>개별 컨테이너의 설정 내용은 환경 변수나 파일이 저장되어 있는 영역을 마운트하여 전달하는 것이 일반적이다</li>
  <li>쿠버네티스에서 환경 변수를 전달할 때는 파드 템플릿에 <code class="language-plaintext highlighter-rouge">env</code> 또는 <code class="language-plaintext highlighter-rouge">envForm</code>을 지정한다</li>
  <li><code class="language-plaintext highlighter-rouge">command</code>나 <code class="language-plaintext highlighter-rouge">args</code>에 환경 변수 전달할 때는 <code class="language-plaintext highlighter-rouge">$()</code> 표기법으로 나타낸다 (또한 매니페스트에서 정의한 환경 변수만 사용할 수 있다)</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">sample-env</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">sample-app</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">nginx-container</span>
      <span class="na">image</span><span class="pi">:</span> <span class="s">nginx:1.16</span>
      <span class="na">command</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">echo"</span><span class="pi">]</span>
      <span class="c1"># K8S_NODE는 환경 변수로 인식, HOSTNAME은 그냥 문자열로 출력 (매니페스트에서 정의한 환경 변수만 사용 가능)</span>
      <span class="na">args</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">$(K8S_NODE)"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">$(HOSTNAME)"</span><span class="pi">]</span>
      <span class="na">env</span><span class="pi">:</span>
        <span class="c1"># 단순 키,벨류 형태</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">MAX_CONNECTION</span>
          <span class="na">value</span><span class="pi">:</span> <span class="s2">"</span><span class="s">100"</span>
        <span class="c1"># 파드 정보를 참조할 때</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">K8S_NODE</span>
          <span class="na">valueFrom</span><span class="pi">:</span>
            <span class="na">fieldRef</span><span class="pi">:</span>
              <span class="na">fieldPath</span><span class="pi">:</span> <span class="s">spec.nodeName</span>
        <span class="c1"># 컨테이너 리소스 정보</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">CPU_LIMITS</span>
          <span class="na">valueFrom</span><span class="pi">:</span>
            <span class="na">resourceFieldRef</span><span class="pi">:</span>
              <span class="na">containerName</span><span class="pi">:</span> <span class="s">nginx-container</span>
              <span class="na">resource</span><span class="pi">:</span> <span class="s">limits.cpu</span>
</code></pre></div></div>

<h1 id="configmap">ConfigMap</h1>

<ul>
  <li>위의 방법처럼 매번 파드에 환경 변수를 설정해도 되지만,</li>
  <li>여러 파드에 적용해야할 경우 컨피그맵을 사용해 한 번에 적용/관리할 수 있다</li>
  <li>컨피그맵은 설정파일을 외부화할 수 있게 도와준다</li>
  <li>키-벨류 형식 외에도 <code class="language-plaintext highlighter-rouge">.conf</code> 같은 설정 파일 자체도 저장할 수 있다</li>
</ul>

<h2 id="컨피그맵-리소스-만드는-방법">컨피그맵 리소스 만드는 방법</h2>

<ul>
  <li>보통 리소스는 YAML 형태의 매니페스트 파일을 통해 만들지만, 컨피그맵은 여러 방법으로 리소스를 만들 수 있다</li>
  <li>파일에서 값을 참조해 생성하는 방법 (<code class="language-plaintext highlighter-rouge">--from-file</code>)</li>
  <li>직접 값을 전달해서 생성하는 방법 (<code class="language-plaintext highlighter-rouge">--from-literal</code>)</li>
  <li>매니페스트로 생성하는 방법(<code class="language-plaintext highlighter-rouge">-f</code>)</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 파일명이 키(key)가되고, 파일안의 내용이 값(value)가 된다</span>
kubectl create configmap &lt;컨피그 리소스명&gt; <span class="nt">--from-file</span> &lt;파일명&gt;

<span class="o">(</span>ex. kubectl create configmap my-config <span class="nt">--from-file</span> NAME <span class="o">=&gt;</span> key는 NAME, value는 <span class="s1">'mike'</span><span class="o">)</span>
<span class="o">(</span>만약 NAME.txt 처럼 확장자가 포함된 파일의 경우, <span class="nt">--from-file</span> NAME.txt<span class="o">=</span>NAME 이런식으로 적어주면 된다<span class="o">)</span>

<span class="c"># 폴더명을 전달하면 폴더안의 파일과 내용이 각각 키와 값이 된다</span>
kubectl create configmap &lt;컨피그 리소스명&gt; <span class="nt">--from-file</span> &lt;폴더명&gt;

<span class="c"># .conf 와 같은 파일을 전달할 수도 있다</span>
kubectl create configmap &lt;컨피그 리소스명&gt; <span class="nt">--from-file</span> ./server.conf
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">ConfigMap</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">sample-configmap</span>
<span class="na">data</span><span class="pi">:</span>
  <span class="na">thread</span><span class="pi">:</span> <span class="s2">"</span><span class="s">16"</span>
  <span class="na">nginx.conf</span><span class="pi">:</span> <span class="pi">|</span>
    <span class="s">user nginx;</span>
    <span class="s">worker_processes auto;</span>
    <span class="s">pid /run/nginx.pid;</span>
  <span class="na">test.sh</span><span class="pi">:</span> <span class="pi">|</span>
    <span class="s">#!/bin/bash</span>
    <span class="s">echo "hello"</span>
    <span class="s">sleep infinity</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl create configmap &lt;컨피그 리소스명&gt; <span class="nt">-f</span> myconfig.yaml
</code></pre></div></div>

<h2 id="컨피그맵-리소스-사용하는-방법">컨피그맵 리소스 사용하는 방법</h2>

<ul>
  <li>환경 변수를 전달하는 방법</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">sample-pod</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">configmap-container</span>
      <span class="na">image</span><span class="pi">:</span> <span class="s">nginx:1.16</span>
      <span class="na">env</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">CONNECTION_MAX</span>
          <span class="na">valueFrom</span><span class="pi">:</span>
            <span class="na">configMapKeyRef</span><span class="pi">:</span> <span class="c1"># 특정 키만</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;컨피그 리소스명&gt;</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s">connection.max</span>
      <span class="na">envFrom</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">configMapRef</span><span class="pi">:</span> <span class="c1"># 컨피그맵에 정의된 전체 키 (키 값이 매니페스트 파일에 직접 명시되지 않아 가독성 조금 떨어짐)</span>
            <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;컨피그 리소스명&gt;</span>
</code></pre></div></div>

<ul>
  <li>볼륨으로 마운트하는 방법</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">sample-pod</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">my-container</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">nginx:1.16</span>
    <span class="na">volumeMounts</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;볼륨명&gt;</span>
      <span class="na">mountPath</span><span class="pi">:</span> <span class="s">&lt;마운트할 컨테이너 경로&gt;</span>
  <span class="na">volumes</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;볼륨명&gt;</span>
    <span class="na">configMap</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;컨피그 리소스명&gt;</span>
      <span class="na">items</span><span class="pi">:</span> <span class="c1"># 특정 키만</span>
      <span class="pi">-</span> <span class="na">key</span><span class="pi">:</span> <span class="s">nginx.conf</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">&lt;컨테이너에 저장될 파일명&gt; (보통 key와 똑같이 함)</span>
        <span class="c1"># 최종적으로 컨테이너에 mountPath/path 로 저장됨</span>
    <span class="na">configMap</span><span class="pi">:</span>
      <span class="na">name</span><span class="pi">:</span> <span class="s">&lt;컨피그 리소스명&gt;</span> <span class="c1"># 컨피그 맵에 정의된 전체 키</span>
</code></pre></div></div>

<h2 id="컨피그맵-업데이트">컨피그맵 업데이트</h2>

<ul>
  <li>환경 변수로 전달했으면, 업데이트 하기 위해 파드를 재기동 해야 한다
    <ul>
      <li><code class="language-plaintext highlighter-rouge">kubectl rollout restart</code></li>
    </ul>
  </li>
  <li>볼륨 마운트로 전달했으면 60초마다 자동 업데이트 된다</li>
</ul>

<h1 id="secret">Secret</h1>

<ul>
  <li>기밀 정보를 취급하기 위한 리소스</li>
  <li>시크릿 데이터는 etcd에 저장된다</li>
  <li>시크릿을 사용하는 파드가 있는 경우에만 etcd에서 쿠버네티스 노드에 데이터를 보낸다</li>
  <li>이 때 노드상에 영구적으로 데이터가 남지 않도록 tmpfs(메모리상에 구축된 임시 파일시스템)에 저장된다</li>
  <li>시크릿이 안전한 또 다른 이유는 kubectl 명령어로 표시했을 때 값이 보기 어렵게 되어있다는 점이다</li>
</ul>

<h1 id="참고">참고</h1>

<ul>
  <li><a href="https://kubernetes.io/docs/concepts/configuration/configmap/#using-configmaps-as-files-from-a-pod">kubernetes 공식문서, ConfigMaps</a></li>
</ul>
:ET
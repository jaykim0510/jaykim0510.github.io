I"2<hr />

<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#템플릿-언어" id="markdown-toc-템플릿-언어">템플릿 언어</a>    <ul>
      <li><a href="#템플릿-변수" id="markdown-toc-템플릿-변수">템플릿 변수</a></li>
      <li><a href="#템플릿-필터" id="markdown-toc-템플릿-필터">템플릿 필터</a></li>
      <li><a href="#템플릿-태그" id="markdown-toc-템플릿-태그">템플릿 태그</a></li>
    </ul>
  </li>
</ul>

<hr />

<ul>
  <li>템플릿은 동적으로 화면을 렌더링 해준다</li>
  <li>기존의 HTML 언어에 템플릿 언어가 녹아있다</li>
  <li>템플릿과 폼 파일은 <code class="language-plaintext highlighter-rouge">templates/&lt;앱이름&gt;</code> 디렉터리에 저장한다</li>
  <li>
    <p>css, js, png, font 와 같은 정적 파일은 static 디렉터리에 저장한다</p>
  </li>
  <li>정적 파일을 템플릿에 사용하고자 할 때는 다음과 같이 적어준다</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # index.html
{% load static %}
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">{% load static %}</code> 이런 것을 템플릿 언어(Template language) 중에서 템플릿 태그라고 한다</li>
</ul>

<h1 id="템플릿-언어">템플릿 언어</h1>

<ul>
  <li>HTML에 <strong>동적인 능력을 부여</strong></li>
  <li>템플릿 언어는 크게 <strong>템플릿 변수</strong>, <strong>템플릿 태그</strong>, <strong>템플릿 필터</strong>, <strong>템플릿 주석</strong>이 있다</li>
</ul>

<h2 id="템플릿-변수">템플릿 변수</h2>

<ul>
  <li>View에서 넘겨받은 Model 데이터를 변수로 사용할 수 있다</li>
  <li><code class="language-plaintext highlighter-rouge">{{ 변수명 }}</code> 이런식으로 사용한다</li>
</ul>

<h2 id="템플릿-필터">템플릿 필터</h2>

<ul>
  <li>변수에 필터를 적용할 수 있다</li>
  <li><code class="language-plaintext highlighter-rouge">{{ 변수명|필터 }}</code></li>
  <li>(ex. <code class="language-plaintext highlighter-rouge">{{ post.title|upper }}</code>)</li>
</ul>

<h2 id="템플릿-태그">템플릿 태그</h2>

<ul>
  <li>템플릿에 로직을 적용할 수 있다</li>
  <li><code class="language-plaintext highlighter-rouge">{% static &lt;정적파일 경로&gt; %}</code>, <code class="language-plaintext highlighter-rouge">{% for %}{% endfor %}</code>, <code class="language-plaintext highlighter-rouge">{% if %}{% else %}{% endif %}</code>, <code class="language-plaintext highlighter-rouge">{% block %}{% endblock %}</code> 등이 있다</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 정적 파일 경로에 문자열이 아니라 변수를 주고 싶은 경우,

# 이런식으로 쓰면 안된다
{% static {{ 변수명 }} %}

# 올바른 방법
{{{% get_static_prefix %}{{img_path}}

&lt;img src={% get_static_prefix %}{{img_path}}&gt;
</code></pre></div></div>
:ET
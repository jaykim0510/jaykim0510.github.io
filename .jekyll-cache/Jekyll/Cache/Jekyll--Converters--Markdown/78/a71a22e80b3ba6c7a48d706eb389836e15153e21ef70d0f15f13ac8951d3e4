I"e<h2 id="1-문자열-자료형의-특징">1. 문자열 자료형의 특징</h2>

<p>문자열 자료형은 <strong>순서가 있는 시퀀스형</strong> 자료형입니다. 그렇기 때문에 인덱싱, 슬라이싱을 통해 데이터의 일부분을 추출할 수 있습니다.<br />
데이터 관련 분야에서 일을 하다 보면 문자열 자료형 데이터를 목적에 맞게 다듬거나 또는 다른 자료형으로 변환해 사용하는 일이 많기 때문에 
자료형 중에서도 비중이 높은 편입니다.<br />
🔔 문자열은 immutable하기 때문에 값을 변경할 수 없다. (리스트로 형변환 해야한다.)</p>

<h2 id="2-문자열-데이터-만들기">2. 문자열 데이터 만들기</h2>

<p>문자열 데이터를 생성하는 방법은 다음과 같습니다.</p>
<ul>
  <li>‘원하는 문자열’</li>
  <li>“원하는 문자열”</li>
  <li>’'’원하는 문자열’’’</li>
  <li>”"”원하는 문자열”””</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'Hello world'</span>
<span class="s">'Hello world'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="s">"Hello world"</span>
<span class="s">'Hello world'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="s">'''Hello world'''</span>
<span class="s">'Hello world'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">d</span> <span class="o">=</span> <span class="s">"""Hello world"""</span>
<span class="s">'Hello world'</span>
</code></pre></div></div>
<p>어떤 따옴표로 묶어도 저장된 값이 모두 같습니다. 그렇다고 해서 아무런 의미가 없지는 않습니다.<br />
예를 들어 세 번째와 네 번째의 ‘’’ ‘’’, “”” “"”은 여러줄에 걸쳐있는 문자열을 하나로 담을 수 있습니다.<br />
(‘’, ““으로 작성하면 오류가 난다)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'''Hello world!
Nice to meet you
I wish you to be happy!'''</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="n">Hello</span> <span class="n">world</span><span class="err">!</span>
<span class="n">Nice</span> <span class="n">to</span> <span class="n">meet</span> <span class="n">you</span>
<span class="n">I</span> <span class="n">wish</span> <span class="n">you</span> <span class="n">to</span> <span class="n">be</span> <span class="n">happy</span><span class="err">!</span>
</code></pre></div></div>
<p>‘와 “ 가 굳이 존재하는 이유는 문자열 안에 ‘ 또는 “이 포함된 경우가 있기 때문입니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">"I'd like to eat something"</span>
<span class="c1"># a = 'I'd like to eat something' 으로 하면 'I' 까지만 문자열로 인식합니다
</span></code></pre></div></div>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'He said "I love you"'</span>
</code></pre></div></div>
<p>만약 문자열에 ‘와 “가 둘다 사용된다면 어떻게 해야할까요? (ex. He said “I’d like to eat something”)<br />
이 때는 이스케이프 문자를 사용해야 합니다. 즉 ‘‘안에 ‘가 들어가는 경우에는 역슬래쉬(백스페이스 밑에 있음)를 앞에 적어줍니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'He said "I</span><span class="se">\'</span><span class="s">d like to eat something"'</span>
</code></pre></div></div>
<h2 id="3-인덱싱-슬라이싱">3. 인덱싱, 슬라이싱</h2>
<p>이번에는 위에서 만들어진 문자열 데이터를 가지고 원하는 부분만 가져올 수 있도록 해주는 인덱싱, 슬라이싱에 대해 알아보겠습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">"Hello world"</span>
<span class="s">"""인덱싱"""</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">H</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
<span class="n">l</span>

<span class="s">"""슬라이싱"""</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">:</span><span class="mi">5</span><span class="p">]</span> <span class="c1"># 0에서 부터 5앞까지 -&gt; 인덱스 0~4
</span><span class="n">Hello</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[:]</span>
<span class="n">Hello</span> <span class="n">world</span><span class="err">!</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[::]</span>
<span class="n">Hello</span> <span class="n">world</span><span class="err">!</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="c1">#처음부터 끝까지 거꾸로 슬라이싱 (중요)
</span><span class="err">!</span><span class="n">dlrow</span> <span class="n">olleH</span>
</code></pre></div></div>
<h2 id="4-문자열-포맷팅">4. 문자열 포맷팅</h2>
<p>문자열을 내가 원하는 형식에 맞춰 출력하는 방법에 대해 알아보겠습니다.</p>
<ol>
  <li>print(“{}”.format())
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'banana'</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="s">'apple'</span><span class="p">,</span> <span class="n">c</span> <span class="o">=</span> <span class="s">'lemon'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s">'I like {}, {} and {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">))</span>
<span class="s">'I like banana, apple and lemon'</span>
</code></pre></div>    </div>
  </li>
  <li>f-string 포맷
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'I like </span><span class="si">{</span><span class="n">a</span><span class="si">}</span><span class="s">, </span><span class="si">{</span><span class="n">b</span><span class="si">}</span><span class="s"> and </span><span class="si">{</span><span class="n">c</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
</code></pre></div>    </div>

    <p>🔔 자릿수를 지정하는 방법</p>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="p">):</span>
     <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">100</span><span class="p">):</span>
         <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s"> * </span><span class="si">{</span><span class="n">j</span><span class="si">}</span><span class="s"> = </span><span class="si">{</span><span class="n">i</span><span class="o">*</span><span class="n">j</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
</code></pre></div>    </div>
    <p>이렇게 하면 99*99단 표를 만들 수 있지만 자릿수가 서로 달라 보기 안좋아진다.<br />
 이럴때 자릿수를 지정하게 되면 훨씬 깔끔한 출력문을 얻을 수 있다.</p>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'</span><span class="si">{</span><span class="n">i</span><span class="p">:</span><span class="mi">2</span><span class="si">}</span><span class="s"> * </span><span class="si">{</span><span class="n">j</span><span class="p">:</span><span class="mi">2</span><span class="si">}</span><span class="s"> = </span><span class="si">{</span><span class="n">i</span><span class="o">*</span><span class="n">j</span><span class="p">:</span><span class="mi">4</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>
 <span class="mi">99</span> <span class="o">*</span>   <span class="mi">9</span> <span class="o">=</span>   <span class="mi">891</span>
 <span class="mi">99</span> <span class="o">*</span>  <span class="mi">10</span> <span class="o">=</span>   <span class="mi">990</span>
 <span class="mi">99</span> <span class="o">*</span>  <span class="mi">11</span> <span class="o">=</span>  <span class="mi">1089</span>
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="5-문자열-메소드">5. 문자열 메소드</h2>
<p>문자열 데이터는 프로그래밍을 하다보면 정말 자주 만나게 되는 자료형 중에 하나입니다.<br />
그렇기 때문에 문자열 객체의 메소드를 잘 활용할 줄 아는 것이 굉장히 중요합니다.<br />
먼저 어떤 메소드가 있는지 확인해 보겠습니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">"Hello world"</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">dir</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="p">[</span><span class="s">'__add__'</span><span class="p">,</span> <span class="s">'__class__'</span><span class="p">,</span> <span class="s">'__contains__'</span><span class="p">,</span> <span class="s">'__delattr__'</span><span class="p">,</span> <span class="s">'__dir__'</span><span class="p">,</span> <span class="s">'__doc__'</span><span class="p">,</span> <span class="s">'__eq__'</span><span class="p">,</span> <span class="s">'__format__'</span><span class="p">,</span> <span class="s">'__ge__'</span><span class="p">,</span> <span class="s">'__getattribute__'</span><span class="p">,</span> <span class="s">'__getitem__'</span><span class="p">,</span> <span class="s">'__getnewargs__'</span><span class="p">,</span> <span class="s">'__gt__'</span><span class="p">,</span> <span class="s">'__hash__'</span><span class="p">,</span> <span class="s">'__init__'</span><span class="p">,</span> <span class="s">'__init_subclass__'</span><span class="p">,</span> <span class="s">'__iter__'</span><span class="p">,</span> <span class="s">'__le__'</span><span class="p">,</span> <span class="s">'__len__'</span><span class="p">,</span> <span class="s">'__lt__'</span><span class="p">,</span> <span class="s">'__mod__'</span><span class="p">,</span> <span class="s">'__mul__'</span><span class="p">,</span> <span class="s">'__ne__'</span><span class="p">,</span> <span class="s">'__new__'</span><span class="p">,</span> <span class="s">'__reduce__'</span><span class="p">,</span> <span class="s">'__reduce_ex__'</span><span class="p">,</span> <span class="s">'__repr__'</span><span class="p">,</span> <span class="s">'__rmod__'</span><span class="p">,</span> <span class="s">'__rmul__'</span><span class="p">,</span> <span class="s">'__setattr__'</span><span class="p">,</span> <span class="s">'__sizeof__'</span><span class="p">,</span> <span class="s">'__str__'</span><span class="p">,</span> <span class="s">'__subclasshook__'</span><span class="p">,</span> <span class="s">'capitalize'</span><span class="p">,</span> <span class="s">'casefold'</span><span class="p">,</span> <span class="s">'center'</span><span class="p">,</span> <span class="s">'count'</span><span class="p">,</span> <span class="s">'encode'</span><span class="p">,</span> <span class="s">'endswith'</span><span class="p">,</span> <span class="s">'expandtabs'</span><span class="p">,</span> <span class="s">'find'</span><span class="p">,</span> <span class="s">'format'</span><span class="p">,</span> <span class="s">'format_map'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">,</span> <span class="s">'isalnum'</span><span class="p">,</span> <span class="s">'isalpha'</span><span class="p">,</span> <span class="s">'isascii'</span><span class="p">,</span> <span class="s">'isdecimal'</span><span class="p">,</span> <span class="s">'isdigit'</span><span class="p">,</span> <span class="s">'isidentifier'</span><span class="p">,</span> <span class="s">'islower'</span><span class="p">,</span> <span class="s">'isnumeric'</span><span class="p">,</span> <span class="s">'isprintable'</span><span class="p">,</span> <span class="s">'isspace'</span><span class="p">,</span> <span class="s">'istitle'</span><span class="p">,</span> <span class="s">'isupper'</span><span class="p">,</span> <span class="s">'join'</span><span class="p">,</span> <span class="s">'ljust'</span><span class="p">,</span> <span class="s">'lower'</span><span class="p">,</span> <span class="s">'lstrip'</span><span class="p">,</span> <span class="s">'maketrans'</span><span class="p">,</span> <span class="s">'partition'</span><span class="p">,</span> <span class="s">'replace'</span><span class="p">,</span> <span class="s">'rfind'</span><span class="p">,</span> <span class="s">'rindex'</span><span class="p">,</span> <span class="s">'rjust'</span><span class="p">,</span> <span class="s">'rpartition'</span><span class="p">,</span> <span class="s">'rsplit'</span><span class="p">,</span> <span class="s">'rstrip'</span><span class="p">,</span> <span class="s">'split'</span><span class="p">,</span> <span class="s">'splitlines'</span><span class="p">,</span> <span class="s">'startswith'</span><span class="p">,</span> <span class="s">'strip'</span><span class="p">,</span> <span class="s">'swapcase'</span><span class="p">,</span> <span class="s">'title'</span><span class="p">,</span> <span class="s">'translate'</span><span class="p">,</span> <span class="s">'upper'</span><span class="p">,</span> <span class="s">'zfill'</span><span class="p">]</span>
</code></pre></div></div>
<p>여기 있는 메소드들을 반드시 머릿속에 모두 외우고 있을 필요는 없습니다. <del>그렇게 하기도 힘들구요. 왜냐하면 저희가 문자열 데이터만 사용하는 것도 아니고 여러 형태의 객체가 갖는 메소드를 생각해보면 그 수가 엄청나니까요.</del><br />
실제로 코딩을 하실 때는 기억이 안나면 그 때마다 <strong>dir()</strong> 함수를 사용해 어떤게 있는지 살펴보면 됩니다. 그러다 익숙해지면 머릿속에 저장되겠지요.</p>

<h3 id="5-1-split">5-1 .split()</h3>
<p>인자(여기서는 쉼표)를 기준으로 나누어 리스트에 저장하여 리턴합니다</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'Banana, Apple, Lemon, Grape'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">", "</span><span class="p">)</span>
<span class="p">[</span><span class="s">'Banana'</span><span class="p">,</span> <span class="s">'Apple'</span><span class="p">,</span> <span class="s">'Lemon'</span><span class="p">,</span> <span class="s">'Grape'</span><span class="p">]</span>
</code></pre></div></div>
<h3 id="5-2-strip">5-2 .strip()</h3>
<p>양 쪽 화이트 스페이스를 제거한 값을 리턴해줍니다</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'         Apple          '</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>
<span class="s">'Apple'</span>

<span class="o">&gt;&gt;&gt;</span> <span class="s">'!!!@@@   apple  @!@@!#$'</span><span class="p">.</span><span class="n">strip</span><span class="p">(</span><span class="s">'!'</span><span class="p">)</span>
<span class="s">'@@@   apple  @!@@!#$'</span>
</code></pre></div></div>
<p>🔔 문자, 화이트 스페이스를 지정하지 않고  제거할 수 있는 방법</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">string</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">string</span><span class="p">.</span><span class="n">whitespace</span>
<span class="s">' </span><span class="se">\t\n\r\x0b\x0c</span><span class="s">'</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">string</span><span class="p">.</span><span class="n">punctuation</span>
<span class="s">'!"#$%&amp;</span><span class="se">\'</span><span class="s">()*+,-./:;&lt;=&gt;?@[</span><span class="se">\\</span><span class="s">]^_`{|}~'</span>

<span class="o">&gt;&gt;&gt;</span> <span class="s">'!@#$!@#      Oh #### is it ok!@#!@#!@#^^?'</span><span class="p">.</span><span class="n">strip</span><span class="p">(</span><span class="n">string</span><span class="p">.</span><span class="n">whitespace</span><span class="o">+</span><span class="n">string</span><span class="p">.</span><span class="n">punctuation</span><span class="p">)</span>
<span class="s">'Oh #### is it ok'</span>
</code></pre></div></div>

<h3 id="5-3-replace">5-3 .replace()</h3>
<p>인자1로 받은 값을 인자2로 바꾸어줍니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'I like Apple'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"Apple"</span><span class="p">,</span> <span class="s">"Banana"</span><span class="p">)</span>
<span class="s">'I like Banana'</span>

<span class="o">&gt;&gt;&gt;</span> <span class="s">'I love banana!!!!'</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'!'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="s">'I love banana'</span>
</code></pre></div></div>
<h3 id="5-4-join">5-4 .join()</h3>
<p>인자로 받은 iterable한 데이터(문자열, <strong>리스트</strong>, 튜플, 딕셔너리, 세트)를 내가 지정한 문자열을 이용해<br />
하나의 문자열로 이어지도록 합니다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="s">'apple'</span><span class="p">,</span> <span class="s">'banana'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">", "</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="s">'apple, banana'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="s">'I'</span><span class="p">,</span> <span class="s">'like'</span><span class="p">,</span> <span class="s">'coffee'</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">" "</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="n">I</span> <span class="n">like</span> <span class="n">coffee</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="s">'Who do you love?'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="s">"#"</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="s">'W#h#o# #d#o# #d#o# #y#o#u# #l#o#v#e#?'</span>
</code></pre></div></div>
<h3 id="5-5-zfill-index-find-count-endswith-lower">5-5 .zfill(), .index(), .find(), .count(), .endswith(), .lower()</h3>
<ul>
  <li>.zfill()<br />
인자로 넣어준 값만큼 문자열 길이를 맞춰주고 남는 부분을 숫자 0으로 메꾼다.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'I like Lemon'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">zfill</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span>
<span class="s">'00000000I like Lemon'</span>
</code></pre></div>    </div>
    <p>비트를 자릿수에 맞춰 나타내고 싶을 때 사용되고는 합니다</p>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">15</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">str</span><span class="p">(</span><span class="nb">bin</span><span class="p">(</span><span class="n">a</span><span class="p">)[</span><span class="mi">2</span><span class="p">:]).</span><span class="n">zfill</span><span class="p">(</span><span class="mi">8</span><span class="p">)</span>
<span class="s">'00001111'</span>
</code></pre></div>    </div>
  </li>
  <li>.index() 와 .find()<br />
둘 다 인자로 넣은 문자열이 위치한 인덱스를 리턴해줍니다.<br />
(차이점은 .index()는 없으면 오류, .find()는 없으면 -1리턴)
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="s">'I like Iron man, Spider man and Hulk'</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">'Spider man'</span><span class="p">)</span>
<span class="mi">17</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="s">'Bat man'</span><span class="p">)</span>
<span class="n">오류</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'Bat man'</span><span class="p">)</span>
<span class="o">-</span><span class="mi">1</span>
</code></pre></div>    </div>
  </li>
  <li>.count()<br />
인자로 받은 문자열이 등장하는 횟수를 리턴해줍니다
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">'ASAP is abbreviation of as soon as possible'</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="s">'A'</span><span class="p">)</span>
<span class="mi">2</span>
</code></pre></div>    </div>
  </li>
  <li>.endswith()<br />
인자로 받은 문자열로 끝나면 True, 아니면 False를 리턴해줍니다
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">'what?'</span><span class="p">.</span><span class="n">endswith</span><span class="p">(</span><span class="s">'?'</span><span class="p">)</span>
<span class="bp">True</span>
</code></pre></div>    </div>
  </li>
  <li>.lower()<br />
인자로 받은 문자열을 모두 소문자로 만들어 리턴해줍니다
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;&gt;&gt;</span> <span class="s">'I love New York'</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
<span class="s">'i love new york'</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET
I"4<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#리액트" id="markdown-toc-리액트">리액트</a></li>
  <li><a href="#리액트의-특징" id="markdown-toc-리액트의-특징">리액트의 특징</a>    <ul>
      <li><a href="#virtual-dom" id="markdown-toc-virtual-dom">Virtual DOM</a></li>
      <li><a href="#선언형-ui" id="markdown-toc-선언형-ui">선언형 UI</a></li>
      <li><a href="#컴포넌트-기반" id="markdown-toc-컴포넌트-기반">컴포넌트 기반</a></li>
      <li><a href="#단방향-데이터-전달" id="markdown-toc-단방향-데이터-전달">단방향 데이터 전달</a></li>
    </ul>
  </li>
  <li><a href="#jsx" id="markdown-toc-jsx">JSX</a></li>
  <li><a href="#렌더링" id="markdown-toc-렌더링">렌더링</a></li>
  <li><a href="#리액트-훅" id="markdown-toc-리액트-훅">리액트 훅</a></li>
  <li><a href="#참고" id="markdown-toc-참고">참고</a></li>
</ul>

<hr />

<h1 id="리액트">리액트</h1>

<ul>
  <li>리액트는 2013년 페이스북에서 공개한 프론트엔드 라이브러리이다</li>
  <li>컴포넌트 기반으로 유저 인터페이스(UI)를 만들도록 해준다</li>
</ul>

<h1 id="리액트의-특징">리액트의 특징</h1>

<h2 id="virtual-dom">Virtual DOM</h2>

<ul>
  <li>Virtual DOM은 메모리에 구현해놓은 가상 DOM을 말한다</li>
  <li>기존의 Virtual DOM과 컴포넌트 함수 재실행으로 변경된 Virtual DOM을 비교해, 변경된 부분을 React DOM에 알린다</li>
  <li>React DOM은 Real DOM과 비교해 변경된 부분만 Real DOM에 업데이트 하여 재렌더링 한다</li>
  <li>Virtual DOM은 다수의 변경을 그룹화 하여 한 번에 처리해주기 때문에 렌더링 성능을 개선해준다</li>
  <li>개발자는 직접 Real DOM을 조작하는 명령형 코드가 아닌, 원하는 상태를 기술하는 선언형 코드를 통해 DOM 조작을 프레임워크에 위임한다</li>
</ul>

<p><img src="/images/react_frontend_2.png" alt="" /></p>

<h2 id="선언형-ui">선언형 UI</h2>

<ul>
  <li>직접 UI가 어떻게 변경되어야 하는지에 관해 명령형으로 코드를 작성하지 않고, 원하는 UI의 상태에 관해 선언적으로 코드를 작성한다</li>
  <li>프레임워크가 선언된 UI 상태와 일치하도록 알아서 렌더링한다</li>
  <li>선언형 UI는 코드의 유지보수성을 높여준다</li>
</ul>

<h2 id="컴포넌트-기반">컴포넌트 기반</h2>

<ul>
  <li>SPA의 등장으로, 렌더링 단위가 페이지 단위에서 컴포넌트 단위로 변화함에 따라 컴포넌트 기반으로 UI를 개발하는게 선호되었다</li>
  <li>컴포넌트 기반 개발은 코드의 재사용성이 더 높인다</li>
</ul>

<p><img src="/images/react_frontend_3.png" alt="" /></p>

<h2 id="단방향-데이터-전달">단방향 데이터 전달</h2>

<ul>
  <li>컴포넌트간의 데이터 전달을 양방향이 아닌 단방향으로 한정함으로써 상태 관리를 좀 더 쉽게 할 수 있게 되었다</li>
  <li>(양방향은 상태 변화의 흐름을 추적하기 어려워, 문제가 발생했을 때 문제의 원인을 찾기 힘들게 만들었다)</li>
  <li>(Angular, Vue는 양방향을 사용한다)</li>
  <li>부모 컴포넌트에서 자식 컴포넌트로만 데이터를 전달할 수 있다</li>
</ul>

<h1 id="jsx">JSX</h1>

<h1 id="렌더링">렌더링</h1>

<h1 id="리액트-훅">리액트 훅</h1>

<h1 id="참고">참고</h1>

<ul>
  <li><a href="https://life-with-coding.tistory.com/505">리액트란?, 코딩젤리</a></li>
</ul>
:ET
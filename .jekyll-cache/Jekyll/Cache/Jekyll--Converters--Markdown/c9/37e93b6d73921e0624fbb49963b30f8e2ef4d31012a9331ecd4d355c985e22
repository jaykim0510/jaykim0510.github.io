I"!<hr />

<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#json" id="markdown-toc-json">JSON</a>    <ul>
      <li><a href="#json-특징" id="markdown-toc-json-특징">JSON 특징</a></li>
      <li><a href="#json-장점" id="markdown-toc-json-장점">JSON 장점</a></li>
      <li><a href="#json-단점" id="markdown-toc-json-단점">JSON 단점</a></li>
    </ul>
  </li>
  <li><a href="#bson" id="markdown-toc-bson">BSON</a>    <ul>
      <li><a href="#bson-특징" id="markdown-toc-bson-특징">BSON 특징</a></li>
      <li><a href="#bson-장점" id="markdown-toc-bson-장점">BSON 장점</a></li>
      <li><a href="#bson-단점" id="markdown-toc-bson-단점">BSON 단점</a></li>
    </ul>
  </li>
  <li><a href="#avro" id="markdown-toc-avro">Avro</a>    <ul>
      <li><a href="#avro-특징" id="markdown-toc-avro-특징">Avro 특징</a></li>
      <li><a href="#avro-장점" id="markdown-toc-avro-장점">Avro 장점</a></li>
      <li><a href="#avro-단점" id="markdown-toc-avro-단점">Avro 단점</a></li>
      <li><a href="#avro-예제" id="markdown-toc-avro-예제">Avro 예제</a>        <ul>
          <li><a href="#primitive-data-type" id="markdown-toc-primitive-data-type">Primitive Data Type</a></li>
          <li><a href="#complex-data-type" id="markdown-toc-complex-data-type">Complex Data Type</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#parquet" id="markdown-toc-parquet">Parquet</a>    <ul>
      <li><a href="#parquet-특징" id="markdown-toc-parquet-특징">Parquet 특징</a></li>
      <li><a href="#parquet-장점" id="markdown-toc-parquet-장점">Parquet 장점</a></li>
      <li><a href="#parquet-단점" id="markdown-toc-parquet-단점">Parquet 단점</a></li>
    </ul>
  </li>
  <li><a href="#serialization-vs-encoding" id="markdown-toc-serialization-vs-encoding">Serialization vs Encoding</a>    <ul>
      <li><a href="#serialization" id="markdown-toc-serialization">Serialization</a></li>
      <li><a href="#encoding" id="markdown-toc-encoding">Encoding</a></li>
    </ul>
  </li>
  <li><a href="#참고" id="markdown-toc-참고">참고</a></li>
</ul>

<hr />

<h1 id="json">JSON</h1>

<h2 id="json-특징">JSON 특징</h2>
<ul>
  <li><strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation의 약자</li>
  <li>서버와 클라이언트 간의 통신에서 일반적으로 많이 사용</li>
  <li>자바스크립트 문법과 굉장히 유사하지만 텍스트 형식일 뿐</li>
</ul>

<h2 id="json-장점">JSON 장점</h2>
<ul>
  <li>프로그래밍 모든 분야에 데이터를 표현하는 용도로 널리 사용된다</li>
  <li>문법이 쉽고 간단하다</li>
  <li>데이터를 쉽게 구조화할 수 있다</li>
</ul>

<h2 id="json-단점">JSON 단점</h2>
<ul>
  <li>텍스트 기반이기 때문에 구문분석이 느리다</li>
  <li>BSON에 비해 크기가 크다</li>
</ul>

<h1 id="bson">BSON</h1>

<h2 id="bson-특징">BSON 특징</h2>
<ul>
  <li>JSON을 Binary로 인코딩한 포맷이다</li>
  <li>MongoDB 진영에서 처음 등장한 데이터 포맷이다</li>
</ul>

<h2 id="bson-장점">BSON 장점</h2>
<ul>
  <li>JSON에 비해 용량이 가벼운 데이터 포맷이다</li>
  <li>JSON과 비교해 더 많은 데이터 타입을 사용할 수 있다</li>
</ul>

<h2 id="bson-단점">BSON 단점</h2>
<ul>
  <li>아직 JSON만큼 프로그래밍의 다양한 진영에서 지원되지는 않는다</li>
</ul>

<h1 id="avro">Avro</h1>

<h2 id="avro-특징">Avro 특징</h2>
<ul>
  <li>아파치의 하둡 프로젝트에서 개발된 데이터 직렬화 프레임워크이다</li>
  <li>데이터 직렬화를 위한 스키마를 뜻하며 JSON 형태로 나타낸다</li>
</ul>

<h2 id="avro-장점">Avro 장점</h2>
<ul>
  <li>데이터의 타입을 알 수 있다</li>
  <li>데이터를 압축하여 저장한다</li>
  <li>Hadoop, Kafka 진영에서 많이 사용된다</li>
</ul>

<h2 id="avro-단점">Avro 단점</h2>
<ul>
  <li>바이너리 형태로 직렬화되어 데이터를 쉽게 분석할 수 없다</li>
</ul>

<h2 id="avro-예제">Avro 예제</h2>

<h3 id="primitive-data-type">Primitive Data Type</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>type: null, bool, int, long, float, double, bytes, string
</code></pre></div></div>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">}</span><span class="w">
</span><span class="p">{</span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"int"</span><span class="p">}</span><span class="w">
</span><span class="p">{</span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"boolean"</span><span class="p">}</span><span class="w">
</span><span class="p">{</span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"long"</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<h3 id="complex-data-type">Complex Data Type</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>type: record
name
namespace
doc
aliases
fields: name, doc, type, default
</code></pre></div></div>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"record"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Students"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"fields"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
    </span><span class="p">{</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"id"</span><span class="p">,</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"long"</span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"name"</span><span class="p">,</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"majors"</span><span class="p">,</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"array"</span><span class="p">,</span><span class="w"> </span><span class="nl">"values"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">},</span><span class="w">
    </span><span class="p">{</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"phone"</span><span class="p">,</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"string"</span><span class="p">}</span><span class="w">
  </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h1 id="parquet">Parquet</h1>

<h2 id="parquet-특징">Parquet 특징</h2>

<h2 id="parquet-장점">Parquet 장점</h2>

<h2 id="parquet-단점">Parquet 단점</h2>

<h1 id="serialization-vs-encoding">Serialization vs Encoding</h1>

<p><img src="/images/serial_encode.png" alt="" /></p>

<h2 id="serialization">Serialization</h2>

<h2 id="encoding">Encoding</h2>

<h1 id="참고">참고</h1>

<ul>
  <li><a href="https://luran.me/352" target="_blank">everydayminder: Avro개요</a></li>
  <li><a href="https://jaemunbro.medium.com/avro-encoding-type%EA%B3%BC-avro-format%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90-1920fe7015ca" target="_blank">Jaemun Jung, [Avro] Data Encoding과 Avro Format</a></li>
</ul>
:ET
I"<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#조인" id="markdown-toc-조인">조인</a>    <ul>
      <li><a href="#서로-구조가-다른-테이블간의-조인" id="markdown-toc-서로-구조가-다른-테이블간의-조인">서로 구조가 다른 테이블간의 조인</a>        <ul>
          <li><a href="#left-outer-join" id="markdown-toc-left-outer-join">LEFT OUTER JOIN</a></li>
          <li><a href="#right-outer-join" id="markdown-toc-right-outer-join">RIGHT OUTER JOIN</a></li>
          <li><a href="#inner-join" id="markdown-toc-inner-join">INNER JOIN</a></li>
        </ul>
      </li>
      <li><a href="#구조가-같은-테이블간의-조인" id="markdown-toc-구조가-같은-테이블간의-조인">구조가 같은 테이블간의 조인</a>        <ul>
          <li><a href="#union" id="markdown-toc-union">UNION</a></li>
          <li><a href="#union-all" id="markdown-toc-union-all">UNION ALL</a></li>
          <li><a href="#intersect" id="markdown-toc-intersect">INTERSECT</a></li>
          <li><a href="#minus" id="markdown-toc-minus">MINUS</a></li>
        </ul>
      </li>
      <li><a href="#외래키" id="markdown-toc-외래키">외래키</a></li>
    </ul>
  </li>
  <li><a href="#서브쿼리" id="markdown-toc-서브쿼리">서브쿼리</a>    <ul>
      <li><a href="#뷰" id="markdown-toc-뷰">뷰</a></li>
    </ul>
  </li>
  <li><a href="#마치며" id="markdown-toc-마치며">마치며</a></li>
</ul>

<hr />

<h1 id="조인">조인</h1>
<p>여러 테이블을 합쳐서 하나의 테이블인 것처럼 보는 행위를 ‘조인(join)’이라고 합니다. 실무에서는 이 조인을 잘해야 제대로된 데이터 분석을 할 수 있습니다. 조인은 SQL을 얼마나 잘 쓰는지 판단하는 척도 중 하나일만큼 정말 중요한 개념입니다.</p>

<h2 id="서로-구조가-다른-테이블간의-조인">서로 구조가 다른 테이블간의 조인</h2>
<ul>
  <li>서로 구조가 다른 테이블을 특정 컬럼을 기준으로 조인</li>
</ul>

<p><img src="/images/sql_3.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SELECT 
    p.name
    p.team
    r.team
    r.region
FROM player AS p LEFT OUTER JOIN region AS r
ON p.team = r.team # ON 대신 USING(team) 이렇게 할 수도 있음
</code></pre></div></div>

<h3 id="left-outer-join">LEFT OUTER JOIN</h3>

<p><img src="/images/sql_5.png" alt="" /></p>

<h3 id="right-outer-join">RIGHT OUTER JOIN</h3>

<p><img src="/images/sql_6.png" alt="" /></p>

<h3 id="inner-join">INNER JOIN</h3>

<p><img src="/images/sql_7.png" alt="" /></p>

<h2 id="구조가-같은-테이블간의-조인">구조가 같은 테이블간의 조인</h2>

<p><img src="/images/sql_4.png" alt="" /></p>

<h3 id="union">UNION</h3>
<ul>
  <li>중복을 허용하지 않는 합집합</li>
</ul>

<p><img src="/images/sql_8.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>SELECT * FROM old_player
UNION
SELECT * FROM new_player;
</code></pre></div></div>

<h3 id="union-all">UNION ALL</h3>
<ul>
  <li>중복을 허용하는 합집합</li>
</ul>

<p><img src="/images/sql_9.png" alt="" /></p>

<h3 id="intersect">INTERSECT</h3>
<ul>
  <li>교집합</li>
  <li>MySQL에서는 지원 하지 않음</li>
  <li>INNER JOIN으로 해결</li>
</ul>

<h3 id="minus">MINUS</h3>
<ul>
  <li>차집합</li>
  <li>MySQL에서는 지원 하지 않음</li>
  <li>LEFT/RIGHT OUTER JOIN으로 해결</li>
</ul>

<h2 id="외래키">외래키</h2>
<p>외래키(Foreign Key)란 한 테이블의 컬럼 중에서 <strong>다른 테이블의 특정 컬럼을 식별할 수 있는 컬럼</strong>을 말합니다. 그리고 외래키에 의해 참조당하는 테이블을 <strong>부모 테이블(parent table)</strong>, <strong>참조당하는 테이블(referenced table)</strong>이라고 합니다. 외래키를 이용하면 <strong>테이블간의 참조 무결성</strong>을 지킬 수 있습니다. 참조 무결성이란 아래 그림과 같이 두 테이블 간에 참조 관계가 있을 때 각 데이터 간에 유지되어야 하는 정확성과 일관성을 의미합니다.</p>

<p><img src="/images/sql_2.png" alt="" /></p>

<h1 id="서브쿼리">서브쿼리</h1>

<ul>
  <li>SELECT문의 결과로 나온 값/열/테이블을 적재적소에 맞게 다른 SELECT문의 입력으로 사용할 수 있습니다</li>
</ul>

<h2 id="뷰">뷰</h2>

<ul>
  <li>때에 따라 서브쿼리가 이중 중첩, 삼중 중첩되는 경우도 있습니다.</li>
  <li>이 때 생기는 SELECT문의 복잡성을 줄이고자 뷰를 사용할 수 있습니다.</li>
  <li>특정 역할을 하는 SELECT문들을 뷰로 저장해둡니다.</li>
  <li>코드 스니펫처럼 필요할 때마다 가져와서 사용할 수 있습니다.</li>
  <li>백엔드 개발자들의 자산과도 같습니다</li>
</ul>

<h1 id="마치며">마치며</h1>
<p>지쳐서 너무 대충해버렸다…생각날 때마다 조금씩 보충해야겠다</p>
:ET
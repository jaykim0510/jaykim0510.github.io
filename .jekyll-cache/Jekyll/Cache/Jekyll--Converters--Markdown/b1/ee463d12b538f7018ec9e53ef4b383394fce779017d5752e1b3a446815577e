I"y<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#변수" id="markdown-toc-변수">변수</a>    <ul>
      <li><a href="#local-variable" id="markdown-toc-local-variable">Local variable</a></li>
    </ul>
  </li>
</ul>
<hr />

<h1 id="변수">변수</h1>

<ul>
  <li>대부분의 쉘 프로그램은 변수의 타입을 미리 선언하지 않아도됨</li>
  <li>변수를 사용하는 방법에는 <code class="language-plaintext highlighter-rouge">$var</code>, <code class="language-plaintext highlighter-rouge">${var}</code>, <code class="language-plaintext highlighter-rouge">"$var"</code>, <code class="language-plaintext highlighter-rouge">"${var}"</code> 방법이 있음</li>
  <li>문자열 안에서는 <code class="language-plaintext highlighter-rouge">$var</code>, 또는 <code class="language-plaintext highlighter-rouge">${var}</code>로 사용 (ex. <code class="language-plaintext highlighter-rouge">echo "var is $var"</code>)</li>
  <li>(참고로 문자열 안에 변수를 쓰고 싶으면 무조건 쌍따옴표로 감싼다. 홑따옴표는 안에 다 문자열로 인식)</li>
  <li>조건문 안에 변수를 쓸 때는 쌍따옴표로 감싸는 것이 안전 -&gt; <code class="language-plaintext highlighter-rouge">"$var"</code>, <code class="language-plaintext highlighter-rouge">"${var}"</code> (ex. <code class="language-plaintext highlighter-rouge">[[ "$var" -eq 10 ]]</code> )</li>
  <li><code class="language-plaintext highlighter-rouge">declare -i var</code> -&gt; var 변수에 정수만 오도록 타입 지정, <code class="language-plaintext highlighter-rouge">-a</code>는 배열</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/zsh</span>

<span class="nv">var_1</span><span class="o">=</span><span class="s2">"Hello var_1"</span>

<span class="nv">int_1</span><span class="o">=</span>1

<span class="nb">echo</span> <span class="nv">$var_1</span>
<span class="nb">echo</span> <span class="k">${</span><span class="nv">var_1</span><span class="k">}</span>
<span class="nb">echo</span> <span class="s2">"</span><span class="nv">$var_1</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="s2">"</span><span class="k">${</span><span class="nv">var_1</span><span class="k">}</span><span class="s2">"</span>
<span class="nb">echo</span> <span class="nv">$int_1</span>
<span class="nt">------------------------------</span>
Hello var_1
Hello var_1
Hello var_1
Hello var_1
1
</code></pre></div></div>

<h2 id="local-variable">Local variable</h2>

<ul>
  <li>함수내에서만 사용하고 싶은 변수는 앞에 <code class="language-plaintext highlighter-rouge">local</code> 붙여준다</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/zsh</span>

<span class="k">function </span>test1<span class="o">()</span>
	<span class="o">{</span>
		<span class="nv">x</span><span class="o">=</span>123
		<span class="nb">echo</span> <span class="s2">"x is </span><span class="nv">$x</span><span class="s2">"</span>
	<span class="o">}</span>


<span class="k">function </span>test2<span class="o">()</span>
	<span class="o">{</span>
		<span class="nb">local </span><span class="nv">y</span><span class="o">=</span>345
		<span class="nb">echo</span> <span class="s2">"y is </span><span class="nv">$y</span><span class="s2">"</span>
	<span class="o">}</span>

test1
test2


</code></pre></div></div>
:ET
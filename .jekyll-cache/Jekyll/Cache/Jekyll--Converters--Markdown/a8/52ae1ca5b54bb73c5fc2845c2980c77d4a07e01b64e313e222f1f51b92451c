I"x<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#클러스터-환경" id="markdown-toc-클러스터-환경">클러스터 환경</a></li>
  <li><a href="#스파크의-분산처리-아키텍처" id="markdown-toc-스파크의-분산처리-아키텍처">스파크의 분산처리 아키텍처</a></li>
  <li><a href="#스파크-애플리케이션-동작-순서" id="markdown-toc-스파크-애플리케이션-동작-순서">스파크 애플리케이션 동작 순서</a></li>
</ul>

<hr />
<h1 id="클러스터-환경">클러스터 환경</h1>
<p><strong>스파크는 본질적으로 분산처리 프레임워크</strong>입니다. 그래서 단순히 테스트를 위한 용도로는 단일 로컬 서버만으로도 가능하지만, 실제 배포 단계에서 스파크를 제대로 활용하기 위해서는 여러 대의 서버를 이용한 클러스터 환경을 구축할 필요가 있습니다.</p>

<p>클러스터란 여러 대의 서버가 네트워크를 통해 연결되어 마치 하나의 서버인 것처럼 동작하는 방식을 의미합니다. 하지만 여러 서버들을 이 같은 방식으로 동작시키는 것은 쉬운 일이 아닙니다. 그래서 스파크에서는 전체 서버의 자원과 동작을 세밀하고 효율적으로 제어할 수 있는 별도 모듈이 필요한데, 이를 <strong>클러스터 매니저</strong>라고 합니다.</p>

<p>스파크에서는 자체 구현한 클러스터 매니저도 제공하고 외부 클러스터 매니저를 임포트해서 사용할 수도 있습니다. 이렇게 여러 종류의 클러스터 매니저를 지원하게 되면 선택의 폭이 넓어진다는 장점도 있긴 하지만 클러스터 매니저마다 동작 방식이나 용어가 다르면 혼동이 될 수 있습니다. 스파크에서는 이런 혼란을 없애고자 추상화된 클러스터 모델을 제공함으로써 사용하는 클러스터의 종류에 관계없이 일관된 방법으로 프로그램을 작성하고 클러스터를 관리할 수 있게 해줍니다.</p>

<p>내용에 들어가기 전에 한 가지 알아둘 것은 클러스터 환경이라고 해서 로컬 환경에서 사용하던 스파크 애플리케이션 <strong>코드를 새로 작성해야 할 필요는 없습니다.</strong> 다만 클러스터 환경에서는 여러 서버를 마치 하나의 서버인 것처럼 다뤄야 하기 때문에 하나의 작업을 여러 서버에 분산해서 실행하고 그 결과를 취합할 수 있는 <strong>분산 작업 관리 기능이 추가</strong>되어야 할 것입니다.</p>

<p>따라서 이번 포스트의 목적은 <strong>분산처리를 위한 시스템 아키텍처를 이해</strong>하고, 이를 구현하기 위해 <strong>필요한 설정과 매개변수를 이해</strong>하는 것입니다.</p>

<h1 id="스파크의-분산처리-아키텍처">스파크의 분산처리 아키텍처</h1>
<p>아래 그림은 분산처리를 위한 스파크의 전형적인 아키텍처입니다. 
<img src="../images/../../images/spark_5.png" alt="" /></p>
<h1 id="스파크-애플리케이션-동작-순서">스파크 애플리케이션 동작 순서</h1>
:ET
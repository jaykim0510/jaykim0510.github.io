I"7<h1 id="dbms">DBMS</h1>
<p>빅 데이터 시대에서 데이터 저장은 가장 중요한 부분 중 하나입니다. 힘들게 얻은 데이터를 저장하지 않는다면 큰 자원 낭비겠죠. 하지만 중요한 것은 단순히 저장에 그치는 것이 아니라, <strong>어떤 식으로 저장해 그 후 데이터를 추가, 갱신, 삭제 할 때 문제(NULL, 중복 등)가 생기지 않도록 할 것인지에 대한 고민</strong>도 이루어져야 한다는 것 입니다. 이번 MySQL 시리즈에서 이런 문제들을 어떻게 해결할 것인지에 대해 공부해보도록 하겠습니다.</p>

<h2 id="database">Database</h2>
<p>데이터베이스는 <strong>데이터의 집합</strong> 또는 <strong>데이터 저장소</strong>라고 정의할 수 있습니다.</p>

<h2 id="dbms-1">DBMS</h2>
<p>데이터베이스를 보통 직접적으로 접근하지는 않습니다. 사용자들이 데이터베이스를 그냥 접근한다면 데이터의 일관성도 떨어질 것이고, 관리도 쉽지 않을 것 입니다. 이러한 이유로 <strong>데이터베이스를 체계적으로 작동할 수 있도록 돕는 소프트웨어가 나오게 되었으며 이를 DBMS(DataBase Management System)</strong>이라고 합니다.</p>

<p>DBMS는 데이터베이스를 구축하는 틀을 제공하고, 효율적으로 데이터를 검색하고 저장하는 기능을 제공합니다. 또한 응용 프로그램들이 데이터베이스에 접근할 수 있는 인터페이스를 제공하고, 장애에 대한 복구 기능, 사용자 권한에 따른 보안성 유지 기능 등을 제공합니다.</p>

<h2 id="sql">SQL</h2>
<p>DBMS를 이용해 데이터베이스를 사용하게 됩니다. 그렇다면 저희는 DBMS와 소통하는 방법을 알아야 합니다. 여기서 DBMS와 소통하기 위한 언어를 SQL(Structured Query Language)라고 합니다. SQL을 이용하면 데이터베이스 조작에 필요한 모든 명령어를 DBMS에 전달함으로써 수행할 수 있습니다.</p>

<p>참고로 데이터베이스 개념이 등장한 1960년 대에는 수집하는 모든 데이터가 관계형 데이터였습니다.</p>

<table>
  <tbody>
    <tr>
      <td>이름</td>
      <td>나이</td>
      <td>성별</td>
      <td>지역</td>
    </tr>
    <tr>
      <td>김oo</td>
      <td>25</td>
      <td>남</td>
      <td>서울</td>
    </tr>
    <tr>
      <td>이oo</td>
      <td>42</td>
      <td>여</td>
      <td>경기</td>
    </tr>
  </tbody>
</table>

<p>이러한 데이터의 집합을 관계형 데이터베이스라고 했으며, 관계형 데이터베이스를 관리하는 DBMS를 RDBMS(Relational DBMS)라고 했습니다. 그러나 2000년대 말부터는 데이터 수집의 중요성이 커지면서 관계형 데이터뿐만 아니라 비관계형 데이터 수집에 대한 관심도 커졌고 이를 위해 비관계형 데이터베이스를 위한 DBMS를 만들었으며 이를 NoSQL(Not ONly SQL, 또는 Non SQL)이라고 합니다. 이러한 이름으로 불리게된 이유는 아마 기존의 관계형 DBMS에는 SQL을 이용했지만, 비관계형 DBMS에는</p>
<h1 id="select문">SELECT문</h1>

<h2 id="select">SELECT</h2>
<h2 id="from">FROM</h2>
<h2 id="where">WHERE</h2>
<h2 id="group-by">GROUP BY</h2>
<h2 id="having">HAVING</h2>
<h2 id="order-by">ORDER BY</h2>
<h2 id="limit">LIMIT</h2>
:ET
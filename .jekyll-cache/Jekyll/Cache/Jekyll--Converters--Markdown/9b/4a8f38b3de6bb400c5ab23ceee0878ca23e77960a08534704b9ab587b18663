I"<hr />

<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#분산-시스템이란" id="markdown-toc-분산-시스템이란">분산 시스템이란</a></li>
  <li><a href="#장점" id="markdown-toc-장점">장점</a>    <ul>
      <li><a href="#performance" id="markdown-toc-performance">Performance</a></li>
      <li><a href="#scalability" id="markdown-toc-scalability">Scalability</a></li>
      <li><a href="#availability" id="markdown-toc-availability">Availability</a></li>
    </ul>
  </li>
  <li><a href="#필요한-것" id="markdown-toc-필요한-것">필요한 것</a>    <ul>
      <li><a href="#partitioning" id="markdown-toc-partitioning">Partitioning</a></li>
      <li><a href="#replication" id="markdown-toc-replication">Replication</a></li>
    </ul>
  </li>
  <li><a href="#어려운-점" id="markdown-toc-어려운-점">어려운 점</a></li>
  <li><a href="#극복" id="markdown-toc-극복">극복</a></li>
</ul>

<hr />

<h1 id="분산-시스템이란">분산 시스템이란</h1>

<blockquote>
  <p>A distributed system is a system whose components are located on different networked computers, which communicate and coordinate their actions by passing messages to one another</p>
</blockquote>

<p><img src="/images/dis_sys_2.png" alt="" /></p>

<p>나는 분산 시스템을 다음과 같은 맥락으로 정리하려고 한다.</p>

<p><img src="/images/dis_sys_1.png" alt="" /></p>

<h1 id="장점">장점</h1>

<h2 id="performance">Performance</h2>

<p>여기서 Performance는 단일 시스템에서의 Performance와 비교해 가격대비 더 낫다는 의미이다. Performance의 절대적인 수치 자체가 더 오를 이유는 없다. 오히려 네트워크 비용으로 감소할 가능성은 있다. 그럼에도 분산 시스템을 쓰는 이유는 가격적인 측면에서 그만큼 값싼 장비를 여러 대 사용하는 것이 낫고, 성능적인 측면 이외에도 분산 시스템이 주는 장점이 있기 때문이다.</p>

<h2 id="scalability">Scalability</h2>

<p>분산 시스템은 서비스 규모, 트래픽량, 작업량에 따라 시스템의 크기를 조절해 이를 핸들링할 능력이 있다. 물론 단일 시스템에서도 Vertical-scaling이 가능하다. 하지만 Horizontal-scaling이 가격적인 측면과 확장이 용이하다는 점에서 이점이 있다.</p>

<h2 id="availability">Availability</h2>

<p>분산 시스템은 노드 일부에 장애가 발생하더라도 계속 같은 기능을 유지할 수 있다. 이는 24시간 내내 장애없는 서비스가 가능하다는 말이다. 물론 이를 위해 요구되는 조건들이 있는데 이 부분은 뒤에서 더 자세히 다룰 것이다.</p>

<p>지금까지 분산 시스템의 장점에 대해서 얘기했다. 이러한 장점을 얻기위해 해야할 일이 있다. 우선 High-level에서 이에 대해 알아보겠다.</p>

<h1 id="필요한-것">필요한 것</h1>

<h2 id="partitioning">Partitioning</h2>

<p>파티셔닝은 분산 시스템의 장점 중에서도 Scalability, Performance를 얻기 위해 필요한 핵심이다. 파티셔닝은 처리(또는 저장)해야 할 데이터를 작게 나누어서 이를 처리(또는 저장)해야 할 노드에게 할당해주는 작업이다.</p>

<p>하지만 오히려 하나의 작업을 위해 네트워크를 거쳐 여러 노드에 접근해야 한다는 점에서 단점이 되는 경우도 있다. 그래서 데이터를 처리할 때는 최대한 네트워크 비용을 줄이는 것이 관건이다.</p>

<p>파티셔닝은 크게 range partitioning, hash partitioning, consistent hashing가 있다. Apache HBase는 range partitioning을 쓰고, Apache Cassandra는 consistent hasing을 쓴다.</p>

<h2 id="replication">Replication</h2>

<h1 id="어려운-점">어려운 점</h1>

<h1 id="극복">극복</h1>
:ET
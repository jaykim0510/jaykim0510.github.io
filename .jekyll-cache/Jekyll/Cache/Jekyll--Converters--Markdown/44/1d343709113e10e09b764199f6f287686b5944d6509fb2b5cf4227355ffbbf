I"<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#값" id="markdown-toc-값">값</a></li>
  <li><a href="#리터럴" id="markdown-toc-리터럴">리터럴</a></li>
  <li><a href="#표현식" id="markdown-toc-표현식">표현식</a></li>
  <li><a href="#문" id="markdown-toc-문">문</a></li>
  <li><a href="#세미콜론-자동-삽입" id="markdown-toc-세미콜론-자동-삽입">세미콜론 자동 삽입</a></li>
  <li><a href="#표현식인-문과-표현식이-아닌-문" id="markdown-toc-표현식인-문과-표현식이-아닌-문">표현식인 문과 표현식이 아닌 문</a></li>
</ul>

<hr />

<p><img src="../../images/js_1.jpeg" alt="" width="50%" /></p>

<h1 id="값">값</h1>
<p>값은 표현식이 평가되어 생성된 결과를 말한다. 평가란 식을 해석해서 값을 생성하거나 참조하는 것을 의미한다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">10</span> <span class="o">+</span> <span class="mi">20</span><span class="p">;</span>
<span class="nx">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</code></pre></div></div>

<h1 id="리터럴">리터럴</h1>

<p>리터럴은 사람이 이해할 수 있는 문자 또는 약속된 기호를 사용해 값을 생성하는 표기법을 말한다.</p>

<table>
  <tbody>
    <tr>
      <td><strong>리터럴</strong></td>
      <td><strong>예시</strong></td>
    </tr>
    <tr>
      <td>정수</td>
      <td>100</td>
    </tr>
    <tr>
      <td>부동소수점</td>
      <td>0.4</td>
    </tr>
    <tr>
      <td>2진수</td>
      <td>0b010001</td>
    </tr>
    <tr>
      <td>문자열</td>
      <td>‘Hello’</td>
    </tr>
    <tr>
      <td>불리언</td>
      <td>true, false</td>
    </tr>
    <tr>
      <td>null</td>
      <td>null</td>
    </tr>
    <tr>
      <td>undefined</td>
      <td>undefined</td>
    </tr>
    <tr>
      <td>객체</td>
      <td>{ name: ‘Lee’, address: ‘Seoul’ }</td>
    </tr>
    <tr>
      <td>배열</td>
      <td>[1, 2, 3]</td>
    </tr>
    <tr>
      <td>함수</td>
      <td>function() {}</td>
    </tr>
    <tr>
      <td>정규 표현식</td>
      <td>/[A-Z]+/g</td>
    </tr>
  </tbody>
</table>

<h1 id="표현식">표현식</h1>
<p>표현식(expression)은 값으로 평가될 수 있는 문이다. 위에서 살펴본 리터럴은 값으로 평가될 수 있기 때문에 리터럴도 표현식이라 할 수 있다.</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">10</span>
<span class="dl">'</span><span class="s1">Hello</span><span class="dl">'</span>

<span class="nx">person</span><span class="p">.</span><span class="nx">name</span>
<span class="nx">arr</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>

<span class="mi">10</span> <span class="o">+</span> <span class="mi">20</span>
<span class="nx">sum</span> <span class="o">=</span> <span class="mi">10</span>
<span class="nx">sum</span> <span class="o">!==</span> <span class="mi">10</span>

<span class="nx">square</span><span class="p">()</span>
<span class="nx">person</span><span class="p">.</span><span class="nx">getName</span><span class="p">()</span>

<span class="nx">x</span> <span class="o">+</span> <span class="mi">3</span>
</code></pre></div></div>

<h1 id="문">문</h1>
<p>문(statement)은 프로그램을 구성하는 기본 단위이자 최소 실행 단위다. 문은 여러 토큰으로 구성된다. 토큰이란 문법적인 의미를 가지며, 문법적으로 더 이상 나눌 수 없는 코드의 기본 요소를 의미한다. 예를 들어, 키워드, 식별자, 연산자, 리터럴, 세미콜론, 마침표 등의 특수기호는 모두 토큰이다.</p>

<p>문은 선언문, 할당문, 조건문, 반복문 등으로 구분할 수 있다.</p>
<h1 id="세미콜론-자동-삽입">세미콜론 자동 삽입</h1>

<h1 id="표현식인-문과-표현식이-아닌-문">표현식인 문과 표현식이 아닌 문</h1>
:ET
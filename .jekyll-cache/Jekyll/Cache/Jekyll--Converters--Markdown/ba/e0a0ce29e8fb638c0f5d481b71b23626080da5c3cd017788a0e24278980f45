I"d<hr />

<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#스프링" id="markdown-toc-스프링">스프링</a>    <ul>
      <li><a href="#스프링-프레임워크" id="markdown-toc-스프링-프레임워크">스프링 프레임워크</a></li>
      <li><a href="#스프링-부트" id="markdown-toc-스프링-부트">스프링 부트</a></li>
      <li><a href="#스프링의-핵심-컨셉" id="markdown-toc-스프링의-핵심-컨셉">스프링의 핵심 컨셉</a></li>
      <li><a href="#객체-지향" id="markdown-toc-객체-지향">객체 지향</a>        <ul>
          <li><a href="#다형성" id="markdown-toc-다형성">다형성</a></li>
          <li><a href="#제어의-역전-의존-관계-주입" id="markdown-toc-제어의-역전-의존-관계-주입">제어의 역전, 의존 관계 주입</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#스프링-컨테이너와-빈" id="markdown-toc-스프링-컨테이너와-빈">스프링 컨테이너와 빈</a></li>
  <li><a href="#싱글톤-컨테이너" id="markdown-toc-싱글톤-컨테이너">싱글톤 컨테이너</a></li>
  <li><a href="#컴포넌트-스캔" id="markdown-toc-컴포넌트-스캔">컴포넌트 스캔</a></li>
  <li><a href="#의존관계-자동-주입" id="markdown-toc-의존관계-자동-주입">의존관계 자동 주입</a></li>
  <li><a href="#빈-스코프" id="markdown-toc-빈-스코프">빈 스코프</a></li>
</ul>

<hr />

<h1 id="스프링">스프링</h1>

<h2 id="스프링-프레임워크">스프링 프레임워크</h2>

<ul>
  <li><strong>핵심 기술</strong>: 스프링 DI 컨테이너, AOP, 이벤트 등</li>
  <li><strong>웹 기술</strong>: 스프링 MVC</li>
  <li><strong>데이터 접근</strong> 기술: 트랜잭션, JDBC</li>
  <li><strong>기술 통합</strong>: 캐시, 이메일, 원격접근, 스케줄링</li>
  <li><strong>테스트</strong>: 스프링 기반 테스트 지원</li>
</ul>

<h2 id="스프링-부트">스프링 부트</h2>

<ul>
  <li>스프링을 편리하게 사용할 수 있도록 지원</li>
  <li>Tomcat 같은 웹 서버 내장</li>
  <li>스프링과 외부 라이브러리 자동 구성</li>
</ul>

<h2 id="스프링의-핵심-컨셉">스프링의 핵심 컨셉</h2>
<ul>
  <li>웹 애플리케이션을 만들어주는 프레임워크</li>
  <li>데이터베이스에 접근을 편리하게 함</li>
  <li><strong>객체 지향 설계를 지원하는 프레임워크</strong></li>
</ul>

<h2 id="객체-지향">객체 지향</h2>

<h3 id="다형성">다형성</h3>
<ul>
  <li>객체 지향 코드를 작성할 때 얻을 수 있는 가장 큰 특징은 <strong>다형성</strong></li>
  <li>다형성은 역할(인터페이스)과 구현(클래스)으로 나누어 코드를 설계</li>
  <li>코드 설계시 역할만 알아도 됨</li>
  <li>빠른 설계와 유연한 확장 가능</li>
</ul>

<h3 id="제어의-역전-의존-관계-주입">제어의 역전, 의존 관계 주입</h3>

<ul>
  <li>스프링은 다형성을 위해 제어의 역전(IoC), 의존관계 주입(DI) 방식으로 개발하도록 지원</li>
  <li>스프링 컨테이너(<code class="language-plaintext highlighter-rouge">ApplicationContext</code>)가 위 방식을 가능하게 함</li>
  <li>서비스를 공연에 비유하면 스프링 컨테이너는 공연 기획자에 해당</li>
</ul>

<h1 id="스프링-컨테이너와-빈">스프링 컨테이너와 빈</h1>

<h1 id="싱글톤-컨테이너">싱글톤 컨테이너</h1>

<h1 id="컴포넌트-스캔">컴포넌트 스캔</h1>

<h1 id="의존관계-자동-주입">의존관계 자동 주입</h1>

<h1 id="빈-스코프">빈 스코프</h1>

:ET
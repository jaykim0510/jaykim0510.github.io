I".4<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#리소스-생성삭제갱신" id="markdown-toc-리소스-생성삭제갱신">리소스 생성/삭제/갱신</a></li>
  <li><a href="#파드-재기동" id="markdown-toc-파드-재기동">파드 재기동</a></li>
  <li><a href="#실행-순서를-지켜야-하는-리소스의-경우" id="markdown-toc-실행-순서를-지켜야-하는-리소스의-경우">실행 순서를 지켜야 하는 리소스의 경우</a></li>
  <li><a href="#여러-매니페스트-파일-적용" id="markdown-toc-여러-매니페스트-파일-적용">여러 매니페스트 파일 적용</a></li>
  <li><a href="#레이블" id="markdown-toc-레이블">레이블</a></li>
  <li><a href="#리소스-조회-get" id="markdown-toc-리소스-조회-get">리소스 조회: get</a></li>
  <li><a href="#리소스-상세-정보-describe" id="markdown-toc-리소스-상세-정보-describe">리소스 상세 정보: describe</a></li>
  <li><a href="#실제-리소스-사용량-확인-top" id="markdown-toc-실제-리소스-사용량-확인-top">실제 리소스 사용량 확인: top</a></li>
  <li><a href="#컨테이너에-명령어-전달-exec" id="markdown-toc-컨테이너에-명령어-전달-exec">컨테이너에 명령어 전달: exec</a></li>
  <li><a href="#포트-포워딩-port-forward" id="markdown-toc-포트-포워딩-port-forward">포트 포워딩: port-forward</a></li>
  <li><a href="#컨테이너-로그-확인-logs" id="markdown-toc-컨테이너-로그-확인-logs">컨테이너 로그 확인: logs</a></li>
  <li><a href="#컨테이너와-로컬간의-파일-복사-cp" id="markdown-toc-컨테이너와-로컬간의-파일-복사-cp">컨테이너와 로컬간의 파일 복사: cp</a></li>
</ul>

<hr />

<ul>
  <li>쿠버네티스에서 클러스터 조작은 모두 마스터 API 를 통해 이루어진다</li>
  <li>직접 API에 요청을 보내거나 클라이언트 라이브러리를 사용해 클러스터를 조작할 수도 있지만,</li>
  <li>수동으로 조작하는 경우에는 CLI 도구인 kubectl을 사용하는 것이 일반적이다</li>
  <li>kubectl은 kubeconfig ( ~/.kube/config)에 쓰여있는 정보를 사용하여 접속한다</li>
  <li>kubectl 명령어 실행은 바로 전달되지만, 바로 처리가 되지는 않는다</li>
  <li>(실제 리소스 처리는 비동기로 실행되기 때문에 바로 완료되지 않을 수 있다)</li>
</ul>

<h1 id="리소스-생성삭제갱신">리소스 생성/삭제/갱신</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 리소스 생성</span>
<span class="c"># 리소스가 있을 경우 에러 발생</span>
kubectl create <span class="nt">-f</span> sample-pod.yaml
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 리소스 조회</span>
kubectl get pods
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 리소스 삭제</span>
<span class="c"># 리소스가 없을 경우 에러 발생</span>
kubectl delete <span class="nt">-f</span> sample-pod.yaml

<span class="c"># 파일을 사용하지 않고 리소스 종류와 이름으로 지정해 삭제할 수도 있다</span>
kubectl delete pod sample-pod

<span class="c"># 특정 리소스 종류를 모두 삭제</span>
kubectl delete pod <span class="nt">--all</span>

<span class="c"># 리소스 처리를 완료하고 명령어 실행을 종료</span>
kubectl delete <span class="nt">-f</span> sample-pod.yaml <span class="nt">--wait</span>

<span class="c"># 리소스 즉시 강제 삭제</span>
kubectl delete <span class="nt">-f</span> sample-pod.yaml <span class="nt">--force</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 리소스 수정</span>
<span class="c"># 변경 부분이 있으면 적용하고, 없으면 적용하지 않는다</span>
<span class="c"># 리소스가 없으면 create 명령어와 동일하게 리소스를 새로 생성한다</span>
<span class="c"># 일반적으로 create 보다 apply를 사용하는 것이 편하다</span>

kubectl apply <span class="nt">-f</span> sample-pod.yaml
</code></pre></div></div>

<h1 id="파드-재기동">파드 재기동</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 디플로이먼트와 같은 리소스에 연결되어 있는 모든 파드를 재기동할 수 있다</span>
<span class="c"># 재실행하고 싶거나, 시크릿 리소스에서 참조되는 환경변수를 변경하고 싶을 때 사용하면 좋다</span>

kubectl rollout restart deployment sample-deployment
</code></pre></div></div>

<h1 id="실행-순서를-지켜야-하는-리소스의-경우">실행 순서를 지켜야 하는 리소스의 경우</h1>

<ul>
  <li>한 개의 매니페스트에 여러 리소스를 정의할 수 있다</li>
  <li>매니페스트에 작성된 순서대로 리소스가 적용된다</li>
  <li>중간에 리소스에 에러가 발생하면, 이후 정의된 리소스는 적용되지 않는다</li>
  <li>리소스간 구분은 <code class="language-plaintext highlighter-rouge">---</code>으로 한다</li>
</ul>

<h1 id="여러-매니페스트-파일-적용">여러 매니페스트 파일 적용</h1>

<ul>
  <li>디렉터리를 경로로 해서 실행하면 디렉터리 안에 리소스들이 함께 적용된다</li>
  <li>파일명 순으로 매니페스트 파일이 적용되기 때문에 순서를 제어하고 싶을 때는 파일명 앞에 인덱스 번호를 지정하면 된다</li>
  <li>디렉터리 안에 디렉터리가 있는 경우에는 <code class="language-plaintext highlighter-rouge">-R</code>을 사용하면 된다</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl apply -f ./dir

kubectl apply -f ./dir -R
</code></pre></div></div>

<h1 id="레이블">레이블</h1>

<ul>
  <li>레이블은 리소스를 구분하기 위한 정보</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">sample-pod</span>
  <span class="na">labels</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">A</span>
    <span class="na">env</span><span class="pi">:</span> <span class="s">dev</span>
</code></pre></div></div>

<ul>
  <li>레이블은 수많은 리소스에 대해 동일한 레이블로 그룹핑하여 처리하거나, 어떤 처리에 대한 조건으로 사용된다</li>
  <li>레플리카 리소스는 레이블을 이용해 파드의 수를 일정하게 유지한다</li>
  <li>서비스 리소스는 레이블을 긱준으로 목적지 파드를 결정한다</li>
</ul>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># app 레이블이 A이고 env 레이블을 가진 파드 조회</span>
kubectl get pods <span class="nt">-l</span> <span class="nv">app</span><span class="o">=</span>A, <span class="nb">env</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 조회할 때 app 레이블 컬럼으로 표시</span>
kubectl get pods <span class="nt">-L</span> app
<span class="nt">-------------------------------------</span>
NAME READY STATUS RESTARTS AGE APP
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># -l -L 옵션 함께 사용 가능</span>
kubectl get pods <span class="nt">-l</span> <span class="nv">app</span><span class="o">=</span>A, <span class="nb">env</span> <span class="nt">-L</span> <span class="nb">env</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 모든 레이블을 LABELS 컬럼에 표시</span>
kubectl get pods <span class="nt">--show-labels</span>
</code></pre></div></div>

<h1 id="리소스-조회-get">리소스 조회: get</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 레이블이 label1: val인 파드들의 레이블을 LABELS 컬럼에 표시</span>
kubectl get pods <span class="nt">-l</span> <span class="nv">label1</span><span class="o">=</span>val1 <span class="nt">--show-labels</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 파드 목록 상세 표시</span>
kubectl get pods <span class="nt">-o</span> wide

<span class="c"># 파드 목록 yaml 형태로 표시</span>
kubectl get pods <span class="nt">-o</span> yaml

<span class="c"># 파드의 특정 항목 표시</span>
kubectl get pods sample-pod <span class="nt">-o</span> <span class="nv">jsonpath</span><span class="o">=</span><span class="s2">"{.metadata.name}"</span>

<span class="c"># 배열 데이터의 일부 항목 표시</span>
<span class="c"># 배열[] 안에 ?(@.field == value) 형식으로 지정</span>
kubectl get pod sample-pod <span class="nt">-o</span> <span class="nv">jsonpath</span><span class="o">=</span><span class="s2">"{.spec.containers[?(@.name == 'nginx-container')].image}"</span>

<span class="c"># 노드 목록 표시</span>
kubectl get nodes

<span class="c"># 모든 종류의 리소스 표시</span>
kubectl get all

<span class="c"># 리소스 상태 변화를 실시간으로 출력</span>
kubectl get pods <span class="nt">--watch</span>
</code></pre></div></div>

<h1 id="리소스-상세-정보-describe">리소스 상세 정보: describe</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl describe pod sample-pod

kubectl describe node gke-k8s-default
</code></pre></div></div>

<h1 id="실제-리소스-사용량-확인-top">실제 리소스 사용량 확인: top</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># describe에 나타난 리소스는 사용량이 아니라 확보한 용량</span>

<span class="c"># 노드의 리소스 사용량 조회</span>
kubectl top node

<span class="c"># 파드별 리소스 사용량 조회</span>
kubectl <span class="nt">-n</span> default top pod

<span class="c"># 컨테이너별 리소스 사용량 조회</span>
kubectl <span class="nt">-n</span> default top pod <span class="nt">--containers</span>
</code></pre></div></div>

<h1 id="컨테이너에-명령어-전달-exec">컨테이너에 명령어 전달: exec</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># -i: 표준 입출력을 패스스루</span>
<span class="c"># -t: 가상 터미널 생성</span>
<span class="c"># -- 다음에 전달할 명령어</span>
kubectl <span class="nb">exec</span> <span class="nt">-it</span> sample-pod <span class="nt">--</span> /bin/ls

<span class="c"># 특정 컨테이너에 명령어 실행</span>
kubectl <span class="nb">exec</span> <span class="nt">-it</span> sample-pod <span class="nt">-c</span> nginx-container <span class="nt">--</span> /bin/bash
</code></pre></div></div>

<h1 id="포트-포워딩-port-forward">포트 포워딩: port-forward</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 로컬 머신에서 파드로 포트 포워딩</span>
kubectl port-forward sample-pod 8888:80

<span class="c"># 파드가 아닌 디플로이먼트 리소스나 서비스 리소스에 연결되는 파드에도 포트 포워딩을 할 수 있다</span>
kubectl port-forward deployment/sample-deployment 8888:80
kubectl port-forward service/sample-service 8888:80
</code></pre></div></div>

<h1 id="컨테이너-로그-확인-logs">컨테이너 로그 확인: logs</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl logs sample-pod

<span class="c"># 특정 컨테이너 로그 출력</span>
kubectl logs sample-pod <span class="nt">-c</span> nginx-container

<span class="c"># 실시간 로그 출력</span>
kubectl logs <span class="nt">-f</span> sample-pod
</code></pre></div></div>

<h1 id="컨테이너와-로컬간의-파일-복사-cp">컨테이너와 로컬간의 파일 복사: cp</h1>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 파드의 파일을 로컬 머신에 복사</span>
kubectl <span class="nb">cp </span>sample-pod:etc/sample.txt ./sample.txt

<span class="c"># 로컬 파일을 컨테이너로 복사</span>
kubectl <span class="nb">cp</span> ./sample.txt sample-pod:/tmp/
</code></pre></div></div>
:ET
I"L<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#kubernetes-network" id="markdown-toc-kubernetes-network">Kubernetes Network</a></li>
  <li><a href="#clusterip" id="markdown-toc-clusterip">ClusterIP</a></li>
  <li><a href="#nodeport" id="markdown-toc-nodeport">NodePort</a></li>
  <li><a href="#loacbalancer" id="markdown-toc-loacbalancer">LoacBalancer</a></li>
  <li><a href="#ingress" id="markdown-toc-ingress">Ingress</a>    <ul>
      <li><a href="#클러스터-외부의-로드-밸런서만을-이용한-ingress" id="markdown-toc-클러스터-외부의-로드-밸런서만을-이용한-ingress">클러스터 외부의 로드 밸런서만을 이용한 Ingress</a></li>
      <li><a href="#클러스터-내부의-ingress-파드를-곁들인-ingress" id="markdown-toc-클러스터-내부의-ingress-파드를-곁들인-ingress">클러스터 내부의 Ingress 파드를 곁들인 Ingress</a></li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="kubernetes-network">Kubernetes Network</h1>
<p>쿠버네티스에서 파드 내부에는 여러 컨테이너가 존재할 수 있는데, 같은 파드 내에 있는 컨테이너는 동일한 IP 주소를 할당받게 됩니다. 따라서 같은 파드의 컨테이너로 통신하려면 <code class="language-plaintext highlighter-rouge">localhost</code>로 통신할 수 있고, 다른 파드의 컨테이너와 통신하려면 <code class="language-plaintext highlighter-rouge">파드의 IP 주소</code>로 통신하면 됩니다. 또한 노드 간의 통신은 <code class="language-plaintext highlighter-rouge">VXLAN이나 L2 Routing</code>을 이용할 수 있습니다.</p>

<p><img src="../../images/kube_25.png" alt="" /></p>

<p>이렇게 쿠버네티스에서는 클러스터 내부에서는 네트워크가 자동으로 구성되어 Service 리소스를 이용하지 않고도 파드 간 통신이 가능합니다. 그러나 Service 리소스를 이용하면 다음과 같은 장점을 얻을 수 있습니다.</p>

<ul>
  <li>로드 밸런싱</li>
  <li>서비스 디스커버리</li>
  <li>클러스터 내부 DNS</li>
</ul>

<h1 id="clusterip">ClusterIP</h1>
<p>ClusterIP는 서비스의 기본 타입입니다. ClusterIP 서비스를 생성하면 <code class="language-plaintext highlighter-rouge">클러스터 내부에서만 통신 가능한 가상 IP</code>가 할당됩니다. kube-proxy는 노드 안에서 ClusterIP에서 들어온 트래픽을 원하는 파드로 전송합니다.</p>

<p><img src="../../images/kube_26.png" alt="" /></p>

<h1 id="nodeport">NodePort</h1>
<p><img src="../../images/kube_27.png" alt="" /></p>
<h1 id="loacbalancer">LoacBalancer</h1>
<p><img src="../../images/kube_28.png" alt="" /></p>
<h1 id="ingress">Ingress</h1>
<p>인그레스는 L7(application layer) 로드 밸런싱을 제공하는 리소스입니다. 인그레스는 서비스들을 묶는 상위 객체로, <code class="language-plaintext highlighter-rouge">kind: Ingress</code>타입 리소스를 지정합니다. 인그레스를 이용하면 하나의 IP주소로 N개의 애플리케이션을 로드 밸런싱할 수 있습니다.</p>
<h2 id="클러스터-외부의-로드-밸런서만을-이용한-ingress">클러스터 외부의 로드 밸런서만을 이용한 Ingress</h2>
<ul>
  <li>GKE 인그레스</li>
</ul>

<p>외부 로드 밸런서로 인그레스를 사용한다면, 인그레스 리소스 생성만으로 충분합니다.<br />
<img src="../../images/kube_29.png" alt="" /></p>
<h2 id="클러스터-내부의-ingress-파드를-곁들인-ingress">클러스터 내부의 Ingress 파드를 곁들인 Ingress</h2>
<ul>
  <li>Nginx 인그레스</li>
</ul>

<p>클러스터 내부에서 인그레스를 이용해 로드 밸런싱을 할 경우 인그레스용 파드를 클러스터 내부에 생성해야 합니다. 또 내부의 인그레스용 파드를 외부에서 접속할 수 있도록 하기 위해 별도의 LoadBalancer 서비스를 생성해야 합니다.</p>

<p>Nginx 인그레스 컨트롤러는 이름은 컨트롤러이지만 L7 수준의 로드 밸런싱을 직접 처리하기도 합니다.<br />
<img src="../../images/kube_30.png" alt="" /></p>
:ET
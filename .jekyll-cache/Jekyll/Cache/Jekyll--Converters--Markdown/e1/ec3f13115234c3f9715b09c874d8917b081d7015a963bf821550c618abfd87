I"l<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#파이썬-언어의-특징" id="markdown-toc-파이썬-언어의-특징">파이썬 언어의 특징</a></li>
  <li><a href="#파이썬-언어의-특징-1" id="markdown-toc-파이썬-언어의-특징-1">파이썬 언어의 특징</a></li>
  <li><a href="#참고" id="markdown-toc-참고">참고</a></li>
</ul>

<hr />

<h1 id="파이썬-언어의-특징">파이썬 언어의 특징</h1>

<p>Python is the high-level general-purpose programming language developed by Guido van Rossum in the late 1980s and released in 1991. It is a dynamically-typed language, which means we don’t have to declare the type of the variable, and the type of the value is known when the code gets executed and the memory management is done automatically.</p>

<p>By reading this article you will understand the execution of Python code.</p>

<p>Python - Interpreted or compiled language?</p>

<p>You will have read somewhere in websites or books, that Python is an Interpreted language. But the truth is that it is both compiled and interpreted.</p>

<p>Let us learn about the various implementation techniques such as compilation and interpretation, and then we will see how Python code gets executed. Along the way you will
also get a clear idea about the above-mentioned truth.</p>

<p>Compilation
Compilation is the process in which the source code is translated into the target language, where the target language is sometimes machine-readable code and in other times it serves as the input to another compiler or interpreter. 
It takes the entire program at a time as the input. 
The code is translated once into object code and can be run many times. 
It will not execute the machine-readable code it produced; this is simply a translation step.
It is the step done before the program execution process.</p>

<p>Interpretation
Interpretation is the process in which it reads the source code and immediately reacts to them. 
Interpreter executes the instruction specified in the source code while the program gets executed.
It takes a single line of code at a time and executes it.
Interpretation uses different strategies for program execution
It takes the source code, parse it and reacts based on the instruction specified.
The source code is translated into some kind of intermediate representation and executes it.
Executes the compiled code that is done by the compiler previously.
In the last 2 cases the compiler is part of the interpreter system.</p>

<p>Both Compilation and Interpretation</p>

<p>Let’s see strategy 2 specified above, in detail.</p>

<p>Many programming languages don’t compile to actual machine code, but to a bytecode. The Compiler first compiles the source code to an intermediate language called Bytecode, which is the lower level, platform independent representation of the source code. The Virtual Machine (Interpreter) then takes the bytecode and executes it.</p>
<h1 id="파이썬-언어의-특징-1">파이썬 언어의 특징</h1>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://www.c-sharpcorner.com/article/why-learn-python-an-introduction-to-python/" target="_blank">Shalini Ravi, How Does Python Code Run: CPython And Python Difference</a></li>
  <li><a href="https://medium.com/@e{:target=&quot;_blank&quot;}lhayefrat/python-cpython-e88e975e80cd">elhay efrat, Python » CPython</a></li>
  <li><a href="https://www.geeksforgeeks.org/difference-various-implementations-python/" target="_blank">geeksforgeeks, Difference between various Implementations of Python</a></li>
  <li><a href="https://jjinfotech.tistory.com/21" target="_blank">파이썬 언어의 특징</a></li>
  <li><a href="https://python-guide-kr.readthedocs.io/ko/latest/starting/which-python.html" target="_blank">파이썬 인터프리터 고르기</a></li>
  <li><a href="https://soooprmx.com/파이썬은-인터프리터언어입니까/" target="_blank">Wireframe: 파이썬은 인터프리터언어입니까?</a></li>
  <li><a href="https://nedbatchelder.com/blog/201803/is_python_interpreted_or_compiled_yes.html" target="_blank">Ned Batchelder: Is Python interpreted or compiled? Yes.</a></li>
</ul>
:ET
I"[<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#참고" id="markdown-toc-참고">참고</a></li>
</ul>

<hr />

<p>도커의 네트워크의 철학은 <strong>CNM(Container Network Model)</strong>을 따릅니다. CNM은 컨테이너를 사용하는 환경에서 사용자가 네트워크 설계를 쉽게 하기 위한 것입니다. 다시 말해, 복잡한 물리적인 환경을 고려할 필요없이 사용자는 네트워크를 설계할 때 추상적인 개념만을 이용해 설계할 수 있게 됩니다. 이러한 추상화는 운영체제나 인프라 환경에 구애받지 않는 설계를 가능하도록 해줍니다.</p>

<p>이러한 개념(CNM)으로 네트워크를 구현해 놓은 것이 libnetwork이고 사용자가 사용할 수 있도록 기능을 제공하는 드라이버가 Networkdriver입니다.</p>

<p>당연히 다음 질문은 <strong>어떤 네트워크 드라이버를 사용해야 하는가</strong> 하는 것입니다. 각 드라이버는 트레이드오프를 제공하며 사용 사례에 따라 다른 장점이 있습니다. 도커 엔진과 함께 제공되는 내장 네트워크 드라이버가 있으며 네트워킹 벤더와 커뮤니티에서 제공하는 플러그인 네트워크 드라이버도 있다. 가장 일반적으로 사용되는 내장 네트워크 드라이버는 <code class="language-plaintext highlighter-rouge">bridge</code>, <code class="language-plaintext highlighter-rouge">overlay</code>, <code class="language-plaintext highlighter-rouge">macvlan</code>입니다.</p>

<ul>
  <li><strong>bridge</strong>: it creates single-host bridge networks. Containers connect to these bridges. To allow outbound traffic to the container, the Kernel iptables does NAT. For inbound traffic, we would need to port-forward a host port with a container port.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>🦊 **Note**  
Every Docker host has a default bridge network (docker0).  
All new container will attach to it unless you override it (using --network flag).   
</code></pre></div>    </div>
  </li>
  <li><strong>Overlay</strong>: it allows containers in different hosts to communicate using encapsulation. It allows you to create a flat, secure, layer-2 network.</li>
  <li><strong>MACVLAN</strong>: Multi-host network. Containers will have its own MAC and IP addresses on the existing physical network (or VLAN). Good things: it is easy and does not use port-mapping. Bad side: the host NIC has to be in promiscuous mode (most cloud provider does not allow this).</li>
</ul>

<h1 id="참고">참고</h1>
<ul>
  <li><a href="https://docs.docker.com/network/" target="_blank">도커 공식문서</a></li>
  <li><a href="https://www.docker.com/blog/understanding-docker-networking-drivers-use-cases/" target="_blank">MARK CHURCH, Understanding Docker Networking Drivers and their use cases</a></li>
  <li><a href="https://captcha.tistory.com/70" target="_blank">클라우드 엔지니어 Won의 성장 블로그, 06. 도커 네트워크 포스트</a></li>
  <li><a href="https://www.daleseo.com/docker-networks/" target="_blank">DaleSeo: Docker 네트워크 사용법</a></li>
  <li><a href="https://julie-tech.tistory.com/50" target="_blank">Julie의 Tech블로그: 도커 - 네트워킹 / bridge와 overlay</a></li>
  <li><a href="https://rayx.me/2020/05/17/docker-network/" target="_blank">Ray, Docker network</a></li>
  <li><a href="https://blog.octo.com/how-does-it-work-docker-part-2-swarm-networking/" target="_blank">Sebastian Caceres, How does it work? Docker! Part 2: Swarm networking</a></li>
</ul>
:ET
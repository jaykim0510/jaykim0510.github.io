I"U<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#service관련-리소스" id="markdown-toc-service관련-리소스">Service관련 리소스</a>    <ul>
      <li><a href="#service" id="markdown-toc-service">Service</a></li>
      <li><a href="#ingress" id="markdown-toc-ingress">Ingress</a></li>
    </ul>
  </li>
  <li><a href="#config-and-storage관련-리소스" id="markdown-toc-config-and-storage관련-리소스">Config and Storage관련 리소스</a>    <ul>
      <li><a href="#configmap" id="markdown-toc-configmap">ConfigMap</a></li>
      <li><a href="#volume" id="markdown-toc-volume">Volume</a></li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="service관련-리소스">Service관련 리소스</h1>
<blockquote>
  <p>In many use cases, a workload has to be accessed by other workloads in the cluster or exposed to the outside world.</p>
</blockquote>

<h2 id="service">Service</h2>

<p><img src="/images/kube_20.png" alt="" /></p>

<p>Service는 네트워크와 관련된 오브젝트입니다. Pod은 자체 IP를 가지고 다른 Pod와 통신할 수 있지만, 쉽게 사라지고 생성되는 특징 때문에 직접 통신하는 방법은 권장하지 않습니다. 쿠버네티스는 Pod와 직접 통신하는 방법 대신, 별도의 고정된 IP를 가진 서비스를 만들고 그 서비스를 통해 Pod에 접근하는 방식을 사용합니다.<br />
Pod을 외부 네트워크와 연결해주고 여러 개의 Pod을 바라보는 내부 로드 밸런서를 생성할 때 사용합니다. 내부 DNS에 서비스 이름을 도메인으로 등록하기 때문에 서비스 디스커버리 역할도 합니다.</p>

<ul>
  <li>ClusterIP: Pod가 동적으로 소멸/생성 되더라도 IP는 고정될 수 있도록 하는 역할</li>
  <li>NodePort: 외부에서 접근가능하도록 하는 포트 역할</li>
  <li>LoadBalancer: 살아있는 노드로 자동으로 연결해주는 역할</li>
</ul>

<p>NodePort는 기본적으로 ClusterIP의 기능을 포함하고 있고, LoadBalancer는 NodePort의 기능을 포함하고 있습니다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ClusterIP</span>
<span class="c1"># redis라는 Deployment 오브젝트에 IP할당</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">redis</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">6379</span> <span class="c1"># clusterIP의 포트 (targetPort따로 없으면 targetPort(pod의 포트)도 6379가 됨)</span>
      <span class="na">protocol</span><span class="pi">:</span> <span class="s">TCP</span>
  <span class="na">selector</span><span class="pi">:</span> <span class="c1"># 어떤pod로 트래픽을 전달할지 결정</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">counter</span>
    <span class="na">tier</span><span class="pi">:</span> <span class="s">db</span>
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># NodePort</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">counter-np</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">NodePort</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">3000</span> <span class="c1"># ClusterIP, Pod IP의 포트</span>
      <span class="na">protocol</span><span class="pi">:</span> <span class="s">TCP</span>
      <span class="na">nodePort</span><span class="pi">:</span> <span class="m">31000</span> <span class="c1"># Node IP의 포트</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">counter</span>
    <span class="na">tier</span><span class="pi">:</span> <span class="s">app</span>
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># LoadBalancer</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Service</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">counter-lb</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">type</span><span class="pi">:</span> <span class="s">LoadBalancer</span>
  <span class="na">ports</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">port</span><span class="pi">:</span> <span class="m">30000</span>
      <span class="na">targetPort</span><span class="pi">:</span> <span class="m">3000</span>
      <span class="na">protocol</span><span class="pi">:</span> <span class="s">TCP</span>
  <span class="na">selector</span><span class="pi">:</span>
    <span class="na">app</span><span class="pi">:</span> <span class="s">counter</span>
    <span class="na">tier</span><span class="pi">:</span> <span class="s">app</span>
</code></pre></div></div>

<h2 id="ingress">Ingress</h2>

<p><img src="/images/kube_21.png" alt="" /></p>

<p>Ingress는 경로 기반 라우팅 서비스를 제공해주는 오브젝트입니다.</p>

<p>LoadBalancer는 단점이 있습니다. LoadBalancer는 한 개의 IP주소로 한 개의 서비스만 핸들링할 수 있습니다. 그래서 만약 N개의 서비스를 실행 중이라면 N개의 LoadBalancer가 필요합니다. 또한 보통 클라우드 프로바이더(AWS, GCP 등)의 로드밸런서를 생성해 사용하기 때문에 로컬서버에서는 사용이 어렵습니다.</p>

<p>Ingress는 경로 기반 라우팅 서비스를 통해 N개의 service를 하나의 IP주소를 이용하더라도 경로를 통해 분기할 수 있습니다.</p>

<p>Ingress는 Pod, ReplicaSet, Deployment, Service와 달리 별도의 컨트롤러를 설치해야 합니다. 컨트롤러에는 대표적으로 <code class="language-plaintext highlighter-rouge">nginx</code>, <code class="language-plaintext highlighter-rouge">haproxy</code>, <code class="language-plaintext highlighter-rouge">traefik</code>, <code class="language-plaintext highlighter-rouge">alb</code>등이 있습니다.</p>

<p>minikube를 이용할 경우 다음 명령어로 설치할 수 있습니다.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># nginx ingress controller</span>
minikube addons <span class="nb">enable </span>ingress
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">apiVersion</span><span class="pi">:</span> <span class="s">networking.k8s.io/v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Ingress</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">echo-v1</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">rules</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">host</span><span class="pi">:</span> <span class="s">v1.echo.192.168.64.5.sslip.io</span>
      <span class="na">http</span><span class="pi">:</span>
        <span class="na">paths</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="na">path</span><span class="pi">:</span> <span class="s">/</span>
            <span class="na">pathType</span><span class="pi">:</span> <span class="s">Prefix</span>
            <span class="na">backend</span><span class="pi">:</span>
              <span class="na">service</span><span class="pi">:</span>
                <span class="na">name</span><span class="pi">:</span> <span class="s">echo-v1</span>
                <span class="na">port</span><span class="pi">:</span>
                  <span class="na">number</span><span class="pi">:</span> <span class="m">3000</span>
<span class="c1"># 들어오는 요청의 host가 v1.echo.192.168.64.5.sslip.io이면 host echo-v1이라는 서비스가 가지는 IP 주소의 3000번 포트로 보내라</span>
</code></pre></div></div>

<p>spec에는 <code class="language-plaintext highlighter-rouge">rules</code>, <code class="language-plaintext highlighter-rouge">defaultBackend</code>(어느 rule에도 속하지 않을 경우) 등이 있습니다.<br />
<a href="https://kubernetes.io/docs/reference/kubernetes-api/service-resources/ingress-v1/" target="_blank">(Ingress 공식문서 참고)</a></p>

<h1 id="config-and-storage관련-리소스">Config and Storage관련 리소스</h1>

<h2 id="configmap">ConfigMap</h2>

<p><img src="/images/kube_22.png" alt="" /></p>

<p>ConfigMap은 설정, 환경 변수들을 담는 오브젝트입니다. 예를 들어 개발/운영에 따라 환경 변수값이 다른 경우, ConfigMap 을 활용해 Pod 생성시 넣어줄 수 있습니다.</p>

<p>ConfigMap을 다양한 방법으로 만들 수 있습니다.</p>
<ul>
  <li>ConfigMap yaml 파일로 오브젝트 생성</li>
  <li>환경 변수 설정을 담고 있는 yaml파일을 ConfigMap 오브젝트로 생성</li>
  <li>그냥 환경 변수를 담고 있는 임의의 파일을 ConfigMap 오브젝트로 생성</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ConfigMap yaml파일</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span> <span class="c1"># 참고로 v1이면 core API group</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">ConfigMap</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">my-config</span>
<span class="na">data</span><span class="pi">:</span>
  <span class="na">hello</span><span class="pi">:</span> <span class="s">world</span>
  <span class="na">kuber</span><span class="pi">:</span> <span class="s">netes</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl apply <span class="nt">-f</span> config-map.yml
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 환경 변수 설정을 담고 있는 yaml파일</span>
<span class="na">global</span><span class="pi">:</span>
  <span class="na">scrape_interval</span><span class="pi">:</span> <span class="s">15s</span>

<span class="na">scrape_configs</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">job_name</span><span class="pi">:</span> <span class="s">prometheus</span>
    <span class="na">metrics_path</span><span class="pi">:</span> <span class="s">/prometheus/metrics</span>
    <span class="na">static_configs</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">targets</span><span class="pi">:</span>
          <span class="pi">-</span> <span class="s">localhost:9090</span>
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># yaml 파일로 ConfigMap 파일 생성</span>
kubectl create cm my-config <span class="nt">--from-file</span><span class="o">=</span>config-file.yml

<span class="c"># ConfigMap 적용</span>
kubectl apply <span class="nt">-f</span> my-config.yml
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># config-env.yml파일 (yml파일 아니지만 그냥 확장자 yml로 해놓아도됨)</span>
<span class="nv">hello</span><span class="o">=</span>world
<span class="nv">haha</span><span class="o">=</span>hoho
</code></pre></div></div>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 임의의 파일로 ConfigMap 파일 생성</span>
kubectl create cm env-config <span class="nt">--from-env-file</span><span class="o">=</span>config-env.yml

<span class="c"># ConfigMap 적용</span>
kubectl apply <span class="nt">-f</span> env-config.yml
</code></pre></div></div>

<p>여러 가지 방법으로 ConfigMap을 Pod에 적용할 수 있습니다.</p>
<ul>
  <li>디스크 볼륨 마운트</li>
  <li>환경변수로 사용</li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ConfigMap yaml파일이 있는 볼륨 마운트</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">alpine</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">alpine</span>
      <span class="na">image</span><span class="pi">:</span> <span class="s">alpine</span>
      <span class="na">command</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">sleep"</span><span class="pi">]</span>
      <span class="na">args</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">100000"</span><span class="pi">]</span>
      <span class="na">volumeMounts</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">config-vol</span>
          <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/etc/config</span>
  <span class="na">volumes</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">config-vol</span>
      <span class="na">configMap</span><span class="pi">:</span>
        <span class="na">name</span><span class="pi">:</span> <span class="s">my-config</span>
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ConfigMap yaml파일 직접 환경변수로 설정</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">alpine-env</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">alpine</span>
      <span class="na">image</span><span class="pi">:</span> <span class="s">alpine</span>
      <span class="na">command</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">sleep"</span><span class="pi">]</span>
      <span class="na">args</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">100000"</span><span class="pi">]</span>
      <span class="na">env</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">hello</span>
          <span class="na">valueFrom</span><span class="pi">:</span>
            <span class="na">configMapKeyRef</span><span class="pi">:</span>
              <span class="na">name</span><span class="pi">:</span> <span class="s">my-config</span>
              <span class="na">key</span><span class="pi">:</span> <span class="s">hello</span>
</code></pre></div></div>

<h2 id="volume">Volume</h2>
<p>Volume은 저장소와 관련된 오브젝트입니다. 지금까지 만들었던 컨테이너는 Pod을 제거하면 컨테이너 내부에 저장했던 데이터도 모두 사라집니다. MySQL과 같은 데이터베이스는 데이터가 유실되지 않도록 반드시 별도의 저장소에 데이터를 저장하고 컨테이너를 새로 만들 때 이전 데이터를 가져와야 합니다.<br />
저장소를 호스트 디렉토리를 사용할 수도 있고 EBS 같은 스토리지를 동적으로 생성하여 사용할 수도 있습니다. 사실상 인기 있는 대부분의 저장 방식을 지원합니다.</p>

<p>저장소의 종류에는 다음과 같은 것들이 있습니다.</p>

<ul>
  <li>임시 디스크
    <ul>
      <li>emptyDir
        <ul>
          <li>Pod 이 생성되고 삭제될 때, 같이 생성되고 삭제되는 임시 디스크</li>
          <li>생성 당시에는 아무 것도 없는 빈 상태</li>
          <li>물리 디스크(노드), 메모리에 저장</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>로컬 디스크
    <ul>
      <li>hostpath
        <ul>
          <li>노드가 생성될 때 이미 존재하고 있는 디렉토리</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>네트워크 디스크
    <ul>
      <li>awsElasticBlockStore, azureDisk 등</li>
    </ul>
  </li>
</ul>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># emptydir</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">shared-volumes</span> 
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">redis</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">redis</span>
    <span class="na">volumeMounts</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">shared-storage</span>
      <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/data/shared</span>
  <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">nginx</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">nginx</span>
    <span class="na">volumeMounts</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">shared-storage</span>
      <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/data/shared</span>
  <span class="na">volumes</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">name </span><span class="pi">:</span> <span class="s">shared-storage</span>
    <span class="na">emptyDir</span><span class="pi">:</span> <span class="pi">{}</span>
</code></pre></div></div>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># hostpath</span>
<span class="na">apiVersion</span><span class="pi">:</span> <span class="s">v1</span>
<span class="na">kind</span><span class="pi">:</span> <span class="s">Pod</span>
<span class="na">metadata</span><span class="pi">:</span>
  <span class="na">name</span><span class="pi">:</span> <span class="s">host-log</span>
<span class="na">spec</span><span class="pi">:</span>
  <span class="na">containers</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">log</span>
      <span class="na">image</span><span class="pi">:</span> <span class="s">busybox</span>
      <span class="na">args</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">/bin/sh"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">-c"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">sleep</span><span class="nv"> </span><span class="s">infinity"</span><span class="pi">]</span>
      <span class="na">volumeMounts</span><span class="pi">:</span>
        <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">varlog</span>
          <span class="na">mountPath</span><span class="pi">:</span> <span class="s">/host/var/log</span>
  <span class="na">volumes</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">varlog</span>
      <span class="na">hostPath</span><span class="pi">:</span>
        <span class="na">path</span><span class="pi">:</span> <span class="s">/var/log</span>
</code></pre></div></div>
:ET
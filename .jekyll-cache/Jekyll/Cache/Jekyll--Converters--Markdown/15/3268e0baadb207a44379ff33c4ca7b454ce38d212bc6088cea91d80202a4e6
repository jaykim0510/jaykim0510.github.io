I"<hr />

<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#컬렉션-프레임웍" id="markdown-toc-컬렉션-프레임웍">컬렉션 프레임웍</a></li>
  <li><a href="#컬렉션-프레임웍의-핵심-인터페이스" id="markdown-toc-컬렉션-프레임웍의-핵심-인터페이스">컬렉션 프레임웍의 핵심 인터페이스</a>    <ul>
      <li><a href="#list" id="markdown-toc-list">List</a></li>
      <li><a href="#set" id="markdown-toc-set">Set</a></li>
      <li><a href="#map" id="markdown-toc-map">Map</a></li>
    </ul>
  </li>
  <li><a href="#몇-가지-중요한-구현클래스" id="markdown-toc-몇-가지-중요한-구현클래스">몇 가지 중요한 구현클래스</a>    <ul>
      <li><a href="#arraylist" id="markdown-toc-arraylist">ArrayList</a></li>
      <li><a href="#hashmap" id="markdown-toc-hashmap">HashMap</a></li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="컬렉션-프레임웍">컬렉션 프레임웍</h1>
<p>JAVA API문서에서는 컬렉션 프레임웍을 ‘데이터 군(group)을 다루고 표현하기 위한 단일화된 구조’라고 정의하고 있습니다. 컬렉션 프레임웍은 컬렉션, 다수의 데이터를 다루는데 필요한 다양하고 풍부한 클래스들을 제공합니다.</p>

<p><img src="/images/java_6.png" alt="" /></p>

<h1 id="컬렉션-프레임웍의-핵심-인터페이스">컬렉션 프레임웍의 핵심 인터페이스</h1>

<p>컬렉션 프레임웍에서는 컬렉션(데이터 그룹)을 크게 <code class="language-plaintext highlighter-rouge">List</code>, <code class="language-plaintext highlighter-rouge">Set</code>, <code class="language-plaintext highlighter-rouge">Map</code>이라는 3가지 인터페이스를 정의함으로써 컬렉션을 다루는데 필요한 기능을 제공하고 있습니다. 그리고 <code class="language-plaintext highlighter-rouge">List</code>와 <code class="language-plaintext highlighter-rouge">Set</code> 인터페이스의 공통된 부분을 뽑아서 새로운 인터페이스인 <code class="language-plaintext highlighter-rouge">Collection</code>을 추가로 정의하였습니다.</p>

<h2 id="list">List</h2>

<ul>
  <li>순서가 있는 데이터의 집합으로 데이터 중복을 허용</li>
  <li>구현클래스: ArrayList, LinkedList, Stack 등</li>
</ul>

<h2 id="set">Set</h2>

<ul>
  <li>순서를 유지하지 않는 데이터의 집합, 데이터의 중복을 허용하지 않음</li>
  <li>구현클래스: HashSet, TreeSet 등</li>
</ul>

<h2 id="map">Map</h2>

<ul>
  <li>키(Key)와 값(Value)으로 이루어진 쌍을 데이터로 갖는 집합</li>
  <li>구현클래스: HashMap, TreeMap, Hashtable 등</li>
</ul>

<h1 id="몇-가지-중요한-구현클래스">몇 가지 중요한 구현클래스</h1>

<h2 id="arraylist">ArrayList</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ArrayList</span> <span class="n">list1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>

<span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">5</span><span class="o">));</span>
<span class="n">list1</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Integer</span><span class="o">(</span><span class="mi">3</span><span class="o">));</span>
</code></pre></div></div>

<h2 id="hashmap">HashMap</h2>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">HashMap</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HashMap</span><span class="o">();</span>

<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"key1"</span><span class="o">,</span> <span class="s">"value1"</span><span class="o">);</span>
<span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"key2"</span><span class="o">,</span> <span class="s">"value2"</span><span class="o">);</span>
</code></pre></div></div>
:ET
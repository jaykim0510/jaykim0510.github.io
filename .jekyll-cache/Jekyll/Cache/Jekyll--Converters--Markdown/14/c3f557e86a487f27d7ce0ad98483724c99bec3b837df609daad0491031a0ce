I"	<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#데이터-타입" id="markdown-toc-데이터-타입">데이터 타입</a>    <ul>
      <li><a href="#숫자-타입" id="markdown-toc-숫자-타입">숫자 타입</a></li>
      <li><a href="#문자열-타입" id="markdown-toc-문자열-타입">문자열 타입</a></li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="데이터-타입">데이터 타입</h1>

<ul>
  <li>원시 타입(Primitive): 숫자, 문자열, 불리언, undefined, null, Symbol</li>
  <li>객체 타입(Object): 객체, 함수, 배열 등 원시 타입이 아닌 모든 타입</li>
</ul>

<h2 id="숫자-타입">숫자 타입</h2>

<ul>
  <li>ECMAScript 사양에 따르면 숫자 타입의 값은 64비트 부동소수점 형식을 따른다</li>
  <li>즉 모든 수를 실수로 처리하며, 정수만 표현하기 위한 데이터 타입이 별도로 존재하지 않는다</li>
  <li>숫자 타입은 추가적으로 세 가지 특별한 값도 표현할 수 있다 (<code class="language-plaintext highlighter-rouge">Infinity</code>, <code class="language-plaintext highlighter-rouge">-Infinity</code>, <code class="language-plaintext highlighter-rouge">NaN</code>)</li>
</ul>

<h2 id="문자열-타입">문자열 타입</h2>

<ul>
  <li>일반 문자열: 쌍따옴표(“) 또는 작은 따옴표(‘) 사용</li>
  <li>
    <p>템플릿 문자열: 백틱(`) 사용</p>
  </li>
  <li>템플릿 문자열을 사용하면, 여러 줄에 걸쳐서 나오는 문자열을 있는 그대로 저장할 수 있다 (탭, 줄바꿈 등 모두 반영된다)</li>
  <li>또 템플릿 문자열을 사용하면 표현식을 삽입할 수 있다</li>
  <li>일반 문자열은 탭, 줄바꿈 등을 표현하려면 이스케이프 시퀀스를 사용해야 한다</li>
  <li>(백슬래쉬 하나인데, 하나만 하면 Jekyll Search가 안되서 두 개로 표기)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">\\0</code>: Null</li>
      <li><code class="language-plaintext highlighter-rouge">\\b</code>: 백스페이스</li>
      <li><code class="language-plaintext highlighter-rouge">\\t</code>: 탭</li>
      <li><code class="language-plaintext highlighter-rouge">\\'</code>: 작은 따옴표</li>
      <li>…</li>
    </ul>
  </li>
</ul>
:ET
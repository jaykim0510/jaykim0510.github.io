I"X<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#view" id="markdown-toc-view">View</a>    <ul>
      <li><a href="#장점" id="markdown-toc-장점">장점</a></li>
      <li><a href="#단점" id="markdown-toc-단점">단점</a></li>
      <li><a href="#생성" id="markdown-toc-생성">생성</a></li>
      <li><a href="#수정" id="markdown-toc-수정">수정</a></li>
      <li><a href="#삭제" id="markdown-toc-삭제">삭제</a></li>
      <li><a href="#정보-확인" id="markdown-toc-정보-확인">정보 확인</a></li>
    </ul>
  </li>
  <li><a href="#ctecommon-table-expression" id="markdown-toc-ctecommon-table-expression">CTE(Common Table Expression)</a>    <ul>
      <li><a href="#view-vs-cte" id="markdown-toc-view-vs-cte">View vs CTE</a></li>
    </ul>
  </li>
</ul>

<hr />

<h1 id="view">View</h1>
<ul>
  <li>뷰(view)는 데이터베이스에 존재하는 일종의 가상 테이블</li>
  <li>실제로 데이터를 저장하고 있지는 않음</li>
  <li>때에 따라 서브쿼리가 이중 중첩, 삼중 중첩되는 경우</li>
  <li>이 때 생기는 SELECT문의 복잡성을 줄이고자 뷰를 사용</li>
  <li>특정 역할을 하는 SELECT문들을 뷰로 저장</li>
  <li>코드 스니펫처럼 필요할 때마다 가져와서 사용 가능</li>
  <li>뷰는 백엔드 개발자들의 자산</li>
</ul>

<h2 id="장점">장점</h2>
<ul>
  <li>특정 사용자에게 테이블 전체가 아닌 필요한 필드만을 보여줄 수 있음</li>
  <li>쿼리의 재사용성</li>
  <li>이미 실행된 서브쿼리라는 점에서 더 빠르다고 할 수 있음</li>
</ul>

<h2 id="단점">단점</h2>
<ul>
  <li>뷰는 수정할 수 없는 경우가 많음
    <ul>
      <li>SUM, AVG와 같은 집계 함수가 있는 경우, UNION ALL, DISTINCT, GROUP BY가 포함된 경우</li>
    </ul>
  </li>
  <li>삽입, 삭제, 갱신 작업에 제한 사항이 많음</li>
  <li>자신만의 인덱스를 가질 수 없음</li>
</ul>

<h2 id="생성">생성</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">CREATE</span> <span class="k">VIEW</span> <span class="o">&lt;</span><span class="err">뷰</span> <span class="err">이름</span><span class="o">&gt;</span> <span class="k">AS</span>
  <span class="k">SELECT</span> <span class="err">필드</span><span class="mi">1</span><span class="p">,</span> <span class="err">필드</span><span class="mi">2</span><span class="p">,</span> <span class="p">...</span>
  <span class="k">FROM</span> <span class="err">테이블</span>
  <span class="k">WHERE</span> <span class="err">조건</span>
</code></pre></div></div>

<h2 id="수정">수정</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">ALTER</span> <span class="k">VIEW</span> <span class="o">&lt;</span><span class="err">뷰</span> <span class="err">이름</span><span class="o">&gt;</span> <span class="k">AS</span>
  <span class="k">SELECT</span> <span class="err">필드</span><span class="mi">1</span><span class="p">,</span> <span class="err">필드</span><span class="mi">2</span><span class="p">,</span> <span class="p">...</span>
  <span class="k">FROM</span> <span class="err">테이블</span>
</code></pre></div></div>
<h2 id="삭제">삭제</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">DROP</span> <span class="k">VIEW</span> <span class="o">&lt;</span><span class="err">뷰</span> <span class="err">이름</span><span class="o">&gt;</span>
</code></pre></div></div>

<h2 id="정보-확인">정보 확인</h2>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SHOW</span> <span class="n">TABLES</span>
<span class="k">SHOW</span> <span class="k">CREATE</span> <span class="k">VIEW</span> <span class="o">&lt;</span><span class="err">뷰</span> <span class="err">이름</span><span class="o">&gt;</span>
<span class="k">DESC</span> <span class="o">&lt;</span><span class="err">뷰</span> <span class="err">이름</span><span class="o">&gt;</span>

<span class="k">SELECT</span> <span class="o">*</span> <span class="k">FROM</span> <span class="n">information_schema</span><span class="p">.</span><span class="n">views</span>
 <span class="k">WHERE</span> <span class="n">table_schema</span> <span class="o">=</span> <span class="o">&lt;</span><span class="n">DB</span><span class="o">&gt;</span>
</code></pre></div></div>

<h1 id="ctecommon-table-expression">CTE(Common Table Expression)</h1>

<ul>
  <li>메모리에 임시 결과로 올려놓고 재사용</li>
  <li>비슷한 기능을 하는 뷰는, 쿼리 결과문을 테이블로 저장하는게 아니라, 그냥 별칭만 해주는 것이다.</li>
  <li>그래서 뷰를 불러오면 쿼리문이 그대로 실행하는 것과 같다.</li>
  <li>하지만 with는 가상의 테이블, 즉 테이블이다.</li>
  <li>대신에 메모리를 차지한다는 단점이 있다.</li>
</ul>

<h2 id="view-vs-cte">View vs CTE</h2>

<ul>
  <li><strong>Ad-hoc queries</strong>: For queries that are referenced occasionally (or just once), it’s usually better to use a CTE. If you need the query again, you can just copy the CTE and modify it if necessary.</li>
  <li><strong>Frequently used queries</strong>: If you tend to reference the same query often, creating a corresponding view is a good idea. However, you’ll need create view permission in your database to create a view.</li>
  <li><strong>Access management</strong>: A view might be used to restrict particular users’ database access while still allowing them to get the information they need. You can give users access to specific views that query the data they’re allowed to see without exposing the whole database. In such a case, a view provides an additional access layer.</li>
</ul>
:ET
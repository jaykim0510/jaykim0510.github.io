I"R<hr />
<p id="toc"><strong>Table of Contents</strong></p>
<ul id="markdown-toc">
  <li><a href="#create" id="markdown-toc-create">Create</a>    <ul>
      <li><a href="#그-밖의-연산" id="markdown-toc-그-밖의-연산">그 밖의 연산</a></li>
    </ul>
  </li>
  <li><a href="#read-query" id="markdown-toc-read-query">Read (Query)</a>    <ul>
      <li><a href="#모든-도큐먼트-조회" id="markdown-toc-모든-도큐먼트-조회">모든 도큐먼트 조회</a></li>
      <li><a href="#조건을-이용한-도큐먼트-조회" id="markdown-toc-조건을-이용한-도큐먼트-조회">조건을 이용한 도큐먼트 조회</a></li>
    </ul>
  </li>
  <li><a href="#update" id="markdown-toc-update">Update</a></li>
  <li><a href="#delete" id="markdown-toc-delete">Delete</a></li>
  <li><a href="#bulk-write" id="markdown-toc-bulk-write">Bulk Write</a></li>
  <li><a href="#참고" id="markdown-toc-참고">참고</a></li>
</ul>

<hr />

<h1 id="create">Create</h1>

<ul>
  <li>도큐먼트를 컬렉션에 추가하는 연산</li>
  <li>컬렉션이 존재하지 않으면 생성후 추가한다</li>
  <li>도큐먼트 하나에 대해서 원자성을 가진다 -&gt; 필드 일부만 생기거나 하는 일은 발생하지 않는다</li>
  <li><code class="language-plaintext highlighter-rouge">_id</code> 필드를 표기하지 않으면, 자동으로 <code class="language-plaintext highlighter-rouge">ObjectId</code> 타입의 값이 부여된다</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 몽고 쉘의 경우 카멜 케이스 (insertOne)
# 파이썬의 경우 스네이크 케이스 표기법 (inser_one)
</span>
<span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">insert_one</span><span class="p">(</span><span class="n">document</span><span class="p">,</span> <span class="p">..)</span>

<span class="c1"># 데이터 순서가 중요하지 않은 경우 ordered=False로 설정하면, 성능향상을 위해 도큐먼트를 재배열해서 삽입한다
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">insert_many</span><span class="p">(</span><span class="n">document</span><span class="p">,</span> <span class="n">ordered</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="p">..)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">insert_one</span><span class="p">(</span>
    <span class="p">{</span>
        <span class="s">"item"</span><span class="p">:</span> <span class="s">"canvas"</span><span class="p">,</span>
        <span class="s">"qty"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
        <span class="s">"tags"</span><span class="p">:</span> <span class="p">[</span><span class="s">"cotton"</span><span class="p">],</span>
        <span class="s">"size"</span><span class="p">:</span> <span class="p">{</span><span class="s">"h"</span><span class="p">:</span> <span class="mi">28</span><span class="p">,</span> <span class="s">"w"</span><span class="p">:</span> <span class="mf">35.5</span><span class="p">,</span> <span class="s">"uom"</span><span class="p">:</span> <span class="s">"cm"</span><span class="p">},</span>
    <span class="p">}</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">insert_many</span><span class="p">(</span>
    <span class="p">[</span>
        <span class="p">{</span>
            <span class="s">"item"</span><span class="p">:</span> <span class="s">"journal"</span><span class="p">,</span>
            <span class="s">"qty"</span><span class="p">:</span> <span class="mi">25</span><span class="p">,</span>
            <span class="s">"tags"</span><span class="p">:</span> <span class="p">[</span><span class="s">"blank"</span><span class="p">,</span> <span class="s">"red"</span><span class="p">],</span>
            <span class="s">"size"</span><span class="p">:</span> <span class="p">{</span><span class="s">"h"</span><span class="p">:</span> <span class="mi">14</span><span class="p">,</span> <span class="s">"w"</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span> <span class="s">"uom"</span><span class="p">:</span> <span class="s">"cm"</span><span class="p">},</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="s">"item"</span><span class="p">:</span> <span class="s">"mat"</span><span class="p">,</span>
            <span class="s">"qty"</span><span class="p">:</span> <span class="mi">85</span><span class="p">,</span>
            <span class="s">"tags"</span><span class="p">:</span> <span class="p">[</span><span class="s">"gray"</span><span class="p">],</span>
            <span class="s">"size"</span><span class="p">:</span> <span class="p">{</span><span class="s">"h"</span><span class="p">:</span> <span class="mf">27.9</span><span class="p">,</span> <span class="s">"w"</span><span class="p">:</span> <span class="mf">35.5</span><span class="p">,</span> <span class="s">"uom"</span><span class="p">:</span> <span class="s">"cm"</span><span class="p">},</span>
        <span class="p">},</span>
        <span class="p">{</span>
            <span class="s">"item"</span><span class="p">:</span> <span class="s">"mousepad"</span><span class="p">,</span>
            <span class="s">"qty"</span><span class="p">:</span> <span class="mi">25</span><span class="p">,</span>
            <span class="s">"tags"</span><span class="p">:</span> <span class="p">[</span><span class="s">"gel"</span><span class="p">,</span> <span class="s">"blue"</span><span class="p">],</span>
            <span class="s">"size"</span><span class="p">:</span> <span class="p">{</span><span class="s">"h"</span><span class="p">:</span> <span class="mi">19</span><span class="p">,</span> <span class="s">"w"</span><span class="p">:</span> <span class="mf">22.85</span><span class="p">,</span> <span class="s">"uom"</span><span class="p">:</span> <span class="s">"cm"</span><span class="p">},</span>
        <span class="p">},</span>
    <span class="p">],</span> <span class="c1"># { ordered: false }
</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="그-밖의-연산">그 밖의 연산</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">update_one</span><span class="p">()</span> <span class="c1"># when (upsert: true) option.
</span><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">update_many</span><span class="p">()</span> <span class="c1"># when (upsert: true) option.
</span><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">find_and_modify</span><span class="p">()</span> <span class="c1"># when (upsert: true) option.
</span><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">find_one_and_update</span><span class="p">()</span> <span class="c1"># when (upsert: true) option.
</span><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">find_one_and_replace</span><span class="p">()</span> <span class="c1"># when (upsert: true) option.
</span><span class="n">db</span><span class="p">.</span><span class="n">collection</span><span class="p">.</span><span class="n">bulk_write</span><span class="p">()</span>
</code></pre></div></div>

<h1 id="read-query">Read (Query)</h1>

<ul>
  <li>한 개의 컬렉션내에서 도큐먼트를 읽어오는 연산</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렌션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">find</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">users</span><span class="p">.</span><span class="n">find</span><span class="p">(</span>
    <span class="p">{</span> <span class="n">age</span><span class="p">:</span> <span class="p">{</span> <span class="err">$</span><span class="n">gt</span><span class="p">:</span> <span class="mi">15</span> <span class="p">}</span> <span class="p">},</span>
    <span class="p">{</span> <span class="n">name</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="n">address</span><span class="p">:</span> <span class="mi">1</span> <span class="p">}</span>
<span class="p">).</span><span class="n">limit</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="모든-도큐먼트-조회">모든 도큐먼트 조회</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">find</span><span class="p">({})</span>
</code></pre></div></div>

<h2 id="조건을-이용한-도큐먼트-조회">조건을 이용한 도큐먼트 조회</h2>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"status"</span><span class="p">:</span> <span class="s">"D"</span><span class="p">})</span>

<span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"status"</span><span class="p">:</span> <span class="p">{</span><span class="s">"$in"</span><span class="p">:</span> <span class="p">[</span><span class="s">"A"</span><span class="p">,</span> <span class="s">"D"</span><span class="p">]}})</span>

<span class="c1"># and 조건
</span><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"status"</span><span class="p">:</span> <span class="s">"A"</span><span class="p">,</span> <span class="s">"qty"</span><span class="p">:</span> <span class="p">{</span><span class="s">"$lt"</span><span class="p">:</span> <span class="mi">30</span><span class="p">}})</span>

<span class="c1"># or 조건
</span><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">find</span><span class="p">({</span><span class="s">"$or"</span><span class="p">:</span> <span class="p">[{</span><span class="s">"status"</span><span class="p">:</span> <span class="s">"A"</span><span class="p">},</span> <span class="p">{</span><span class="s">"qty"</span><span class="p">:</span> <span class="p">{</span><span class="s">"$lt"</span><span class="p">:</span> <span class="mi">30</span><span class="p">}}]})</span>
</code></pre></div></div>

<h1 id="update">Update</h1>

<ul>
  <li>한 개의 컬렉션내에 존재하는 도큐먼트를 수정하는 연산</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 필터에 매칭되는 도큐먼트 1개(여러개가 매칭되더라도)의 필드값을 수정한다
# upsert=True로 하면, 매칭되는 도큐먼트가 없을 때 update 기반으로 추가한다
# update에 들어가는 연산자는 $currentDate, $inc, $min, $max, $mul, $rename, $set, $unset 등이 있다
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">update_one</span><span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="n">update</span><span class="p">,</span> <span class="n">upsert</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="p">..)</span>

<span class="c1"># 필터에 매칭되는 모든 도큐먼트의 필드값을 수정한다
# upsert=True로 하면, 매칭되는 도큐먼트가 없을 때 도큐먼트 1개를 추가한다
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">update_many</span><span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="n">update</span><span class="p">,</span> <span class="n">upsert</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="p">..)</span>

<span class="c1"># 필터에 매칭되는 도큐먼트 1개(여러개가 매칭되더라도)를 replacement로 대체한다
# upsert=True로 하면, 매칭되는 도큐먼트가 없을 때 replacement를 추가한다
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">replace_one</span><span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="n">replacement</span><span class="p">,</span> <span class="n">upsert</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="p">..)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">update_one</span><span class="p">(</span>
    <span class="p">{</span><span class="s">"item"</span><span class="p">:</span> <span class="s">"paper"</span><span class="p">},</span>
    <span class="p">{</span><span class="s">"$set"</span><span class="p">:</span> <span class="p">{</span><span class="s">"size.uom"</span><span class="p">:</span> <span class="s">"cm"</span><span class="p">,</span> <span class="s">"status"</span><span class="p">:</span> <span class="s">"P"</span><span class="p">},</span> <span class="s">"$currentDate"</span><span class="p">:</span> <span class="p">{</span><span class="s">"lastModified"</span><span class="p">:</span> <span class="bp">True</span><span class="p">}},</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">update_many</span><span class="p">(</span>
    <span class="p">{</span><span class="s">"qty"</span><span class="p">:</span> <span class="p">{</span><span class="s">"$lt"</span><span class="p">:</span> <span class="mi">50</span><span class="p">}},</span>
    <span class="p">{</span><span class="s">"$set"</span><span class="p">:</span> <span class="p">{</span><span class="s">"size.uom"</span><span class="p">:</span> <span class="s">"in"</span><span class="p">,</span> <span class="s">"status"</span><span class="p">:</span> <span class="s">"P"</span><span class="p">},</span> <span class="s">"$currentDate"</span><span class="p">:</span> <span class="p">{</span><span class="s">"lastModified"</span><span class="p">:</span> <span class="bp">True</span><span class="p">}},</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">replace_one</span><span class="p">(</span>
    <span class="p">{</span><span class="s">"item"</span><span class="p">:</span> <span class="s">"paper"</span><span class="p">},</span>
    <span class="p">{</span>
        <span class="s">"item"</span><span class="p">:</span> <span class="s">"paper"</span><span class="p">,</span>
        <span class="s">"instock"</span><span class="p">:</span> <span class="p">[{</span><span class="s">"warehouse"</span><span class="p">:</span> <span class="s">"A"</span><span class="p">,</span> <span class="s">"qty"</span><span class="p">:</span> <span class="mi">60</span><span class="p">},</span> <span class="p">{</span><span class="s">"warehouse"</span><span class="p">:</span> <span class="s">"B"</span><span class="p">,</span> <span class="s">"qty"</span><span class="p">:</span> <span class="mi">40</span><span class="p">}],</span>
    <span class="p">},</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- $currentDate: Sets the value of a field to current date, either as a Date or a Timestamp.
- $inc: Increments the value of the field by the specified amount.
- $min: Only updates the field if the specified value is less than the existing field value.
- $max: Only updates the field if the specified value is greater than the existing field value.
- $mul: Multiplies the value of the field by the specified amount.
- $rename: Renames a field.
- $set: Sets the value of a field in a document.
- $setOnInsert: Sets the value of a field if an update results in an insert of a document. Has no effect on update operations that modify existing documents.
- $unset: Removes the specified field from a document.
</code></pre></div></div>

<h1 id="delete">Delete</h1>

<ul>
  <li>한 개의 컬렉션내에서 도큐먼트를 삭제하는 연산</li>
</ul>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 필터에 매칭되는 도큐먼트 1개 (여러 개가 매치되더라도)를 삭제
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">delete_one</span><span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="p">..)</span>

<span class="c1"># 필터에 매칭되는 모든 도큐먼트를 삭제
</span><span class="n">db</span><span class="p">.</span><span class="o">&lt;</span><span class="n">컬렉션명</span><span class="o">&gt;</span><span class="p">.</span><span class="n">delete_many</span><span class="p">(</span><span class="nb">filter</span><span class="p">,</span> <span class="p">..)</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">delete_one</span><span class="p">({</span><span class="s">"status"</span><span class="p">:</span> <span class="s">"A"</span><span class="p">})</span>
</code></pre></div></div>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 모든 도큐먼트 삭제
</span><span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">delete_many</span><span class="p">({})</span>

<span class="n">db</span><span class="p">.</span><span class="n">inventory</span><span class="p">.</span><span class="n">delete_many</span><span class="p">({</span><span class="s">"status"</span><span class="p">:</span> <span class="s">"A"</span><span class="p">})</span>
</code></pre></div></div>

<h1 id="bulk-write">Bulk Write</h1>

<h1 id="참고">참고</h1>

<ul>
  <li><a href="https://www.mongodb.com/docs/manual/crud/" target="_blank">몽고DB 공식문서, MongoDB CRUD Operations</a></li>
  <li><a href="https://www.mongodb.com/docs/manual/reference/sql-comparison/" target="_blank">몽고DB 공식문서, SQL to MongoDB Mapping Chart</a></li>
  <li><a href="https://www.mongodb.com/docs/manual/reference/operator/update/#std-label-update-operators" target="_blank">몽고DB 공식문서, Update Operators</a></li>
</ul>
:ET